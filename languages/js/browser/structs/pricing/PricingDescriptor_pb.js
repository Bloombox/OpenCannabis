/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.exportSymbol('proto.FreebiePricingDescriptor', null, global);
goog.exportSymbol('proto.PricingDescriptor', null, global);
goog.exportSymbol('proto.PricingTierAvailability', null, global);
goog.exportSymbol('proto.PricingType', null, global);
goog.exportSymbol('proto.PricingWeightTier', null, global);
goog.exportSymbol('proto.ProductPricing', null, global);
goog.exportSymbol('proto.UnitPricingDescriptor', null, global);
goog.exportSymbol('proto.WeightedPricingDescriptor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PricingTierAvailability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PricingTierAvailability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.PricingTierAvailability.displayName = 'proto.PricingTierAvailability';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PricingTierAvailability.prototype.toObject = function(opt_includeInstance) {
  return proto.PricingTierAvailability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PricingTierAvailability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PricingTierAvailability.toObject = function(includeInstance, msg) {
  var f, obj = {
    offered: jspb.Message.getFieldWithDefault(msg, 1, false),
    available: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PricingTierAvailability}
 */
proto.PricingTierAvailability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PricingTierAvailability;
  return proto.PricingTierAvailability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PricingTierAvailability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PricingTierAvailability}
 */
proto.PricingTierAvailability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOffered(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PricingTierAvailability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PricingTierAvailability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PricingTierAvailability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PricingTierAvailability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffered();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool offered = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.PricingTierAvailability.prototype.getOffered = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.PricingTierAvailability.prototype.setOffered = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool available = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.PricingTierAvailability.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.PricingTierAvailability.prototype.setAvailable = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UnitPricingDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.UnitPricingDescriptor.repeatedFields_, null);
};
goog.inherits(proto.UnitPricingDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.UnitPricingDescriptor.displayName = 'proto.UnitPricingDescriptor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.UnitPricingDescriptor.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UnitPricingDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.UnitPricingDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UnitPricingDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnitPricingDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    priceValue: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    status: (f = msg.getStatus()) && proto.PricingTierAvailability.toObject(includeInstance, f),
    discountsList: jspb.Message.toObjectList(msg.getDiscountsList(),
    proto.SaleDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UnitPricingDescriptor}
 */
proto.UnitPricingDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UnitPricingDescriptor;
  return proto.UnitPricingDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UnitPricingDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UnitPricingDescriptor}
 */
proto.UnitPricingDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPriceValue(value);
      break;
    case 2:
      var value = new proto.PricingTierAvailability;
      reader.readMessage(value,proto.PricingTierAvailability.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.SaleDescriptor;
      reader.readMessage(value,proto.SaleDescriptor.deserializeBinaryFromReader);
      msg.addDiscounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UnitPricingDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UnitPricingDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UnitPricingDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnitPricingDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriceValue();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PricingTierAvailability.serializeBinaryToWriter
    );
  }
  f = message.getDiscountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.SaleDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional float price_value = 1;
 * @return {number}
 */
proto.UnitPricingDescriptor.prototype.getPriceValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.UnitPricingDescriptor.prototype.setPriceValue = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PricingTierAvailability status = 2;
 * @return {?proto.PricingTierAvailability}
 */
proto.UnitPricingDescriptor.prototype.getStatus = function() {
  return /** @type{?proto.PricingTierAvailability} */ (
    jspb.Message.getWrapperField(this, proto.PricingTierAvailability, 2));
};


/** @param {?proto.PricingTierAvailability|undefined} value */
proto.UnitPricingDescriptor.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.UnitPricingDescriptor.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.UnitPricingDescriptor.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SaleDescriptor discounts = 3;
 * @return {!Array.<!proto.SaleDescriptor>}
 */
proto.UnitPricingDescriptor.prototype.getDiscountsList = function() {
  return /** @type{!Array.<!proto.SaleDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SaleDescriptor, 3));
};


/** @param {!Array.<!proto.SaleDescriptor>} value */
proto.UnitPricingDescriptor.prototype.setDiscountsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.SaleDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SaleDescriptor}
 */
proto.UnitPricingDescriptor.prototype.addDiscounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.SaleDescriptor, opt_index);
};


proto.UnitPricingDescriptor.prototype.clearDiscountsList = function() {
  this.setDiscountsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WeightedPricingDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WeightedPricingDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WeightedPricingDescriptor.displayName = 'proto.WeightedPricingDescriptor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WeightedPricingDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.WeightedPricingDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WeightedPricingDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WeightedPricingDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    weight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tier: (f = msg.getTier()) && proto.UnitPricingDescriptor.toObject(includeInstance, f),
    weightingrams: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WeightedPricingDescriptor}
 */
proto.WeightedPricingDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WeightedPricingDescriptor;
  return proto.WeightedPricingDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WeightedPricingDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WeightedPricingDescriptor}
 */
proto.WeightedPricingDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PricingWeightTier} */ (reader.readEnum());
      msg.setWeight(value);
      break;
    case 2:
      var value = new proto.UnitPricingDescriptor;
      reader.readMessage(value,proto.UnitPricingDescriptor.deserializeBinaryFromReader);
      msg.setTier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeightingrams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WeightedPricingDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WeightedPricingDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WeightedPricingDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WeightedPricingDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTier();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.UnitPricingDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getWeightingrams();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional PricingWeightTier weight = 1;
 * @return {!proto.PricingWeightTier}
 */
proto.WeightedPricingDescriptor.prototype.getWeight = function() {
  return /** @type {!proto.PricingWeightTier} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PricingWeightTier} value */
proto.WeightedPricingDescriptor.prototype.setWeight = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional UnitPricingDescriptor tier = 2;
 * @return {?proto.UnitPricingDescriptor}
 */
proto.WeightedPricingDescriptor.prototype.getTier = function() {
  return /** @type{?proto.UnitPricingDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.UnitPricingDescriptor, 2));
};


/** @param {?proto.UnitPricingDescriptor|undefined} value */
proto.WeightedPricingDescriptor.prototype.setTier = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.WeightedPricingDescriptor.prototype.clearTier = function() {
  this.setTier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WeightedPricingDescriptor.prototype.hasTier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float weightInGrams = 3;
 * @return {number}
 */
proto.WeightedPricingDescriptor.prototype.getWeightingrams = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.WeightedPricingDescriptor.prototype.setWeightingrams = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FreebiePricingDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FreebiePricingDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.FreebiePricingDescriptor.displayName = 'proto.FreebiePricingDescriptor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FreebiePricingDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.FreebiePricingDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FreebiePricingDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FreebiePricingDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FreebiePricingDescriptor}
 */
proto.FreebiePricingDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FreebiePricingDescriptor;
  return proto.FreebiePricingDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FreebiePricingDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FreebiePricingDescriptor}
 */
proto.FreebiePricingDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FreebiePricingDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FreebiePricingDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FreebiePricingDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FreebiePricingDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PricingDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PricingDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.PricingDescriptor.displayName = 'proto.PricingDescriptor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PricingDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.PricingDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PricingDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PricingDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    unit: (f = msg.getUnit()) && proto.UnitPricingDescriptor.toObject(includeInstance, f),
    weighted: (f = msg.getWeighted()) && proto.WeightedPricingDescriptor.toObject(includeInstance, f),
    freebie: (f = msg.getFreebie()) && proto.FreebiePricingDescriptor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PricingDescriptor}
 */
proto.PricingDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PricingDescriptor;
  return proto.PricingDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PricingDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PricingDescriptor}
 */
proto.PricingDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PricingType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 20:
      var value = new proto.UnitPricingDescriptor;
      reader.readMessage(value,proto.UnitPricingDescriptor.deserializeBinaryFromReader);
      msg.setUnit(value);
      break;
    case 21:
      var value = new proto.WeightedPricingDescriptor;
      reader.readMessage(value,proto.WeightedPricingDescriptor.deserializeBinaryFromReader);
      msg.setWeighted(value);
      break;
    case 22:
      var value = new proto.FreebiePricingDescriptor;
      reader.readMessage(value,proto.FreebiePricingDescriptor.deserializeBinaryFromReader);
      msg.setFreebie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PricingDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PricingDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PricingDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PricingDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUnit();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.UnitPricingDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getWeighted();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.WeightedPricingDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getFreebie();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.FreebiePricingDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * optional PricingType type = 1;
 * @return {!proto.PricingType}
 */
proto.PricingDescriptor.prototype.getType = function() {
  return /** @type {!proto.PricingType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.PricingType} value */
proto.PricingDescriptor.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional UnitPricingDescriptor unit = 20;
 * @return {?proto.UnitPricingDescriptor}
 */
proto.PricingDescriptor.prototype.getUnit = function() {
  return /** @type{?proto.UnitPricingDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.UnitPricingDescriptor, 20));
};


/** @param {?proto.UnitPricingDescriptor|undefined} value */
proto.PricingDescriptor.prototype.setUnit = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.PricingDescriptor.prototype.clearUnit = function() {
  this.setUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.PricingDescriptor.prototype.hasUnit = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional WeightedPricingDescriptor weighted = 21;
 * @return {?proto.WeightedPricingDescriptor}
 */
proto.PricingDescriptor.prototype.getWeighted = function() {
  return /** @type{?proto.WeightedPricingDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.WeightedPricingDescriptor, 21));
};


/** @param {?proto.WeightedPricingDescriptor|undefined} value */
proto.PricingDescriptor.prototype.setWeighted = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.PricingDescriptor.prototype.clearWeighted = function() {
  this.setWeighted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.PricingDescriptor.prototype.hasWeighted = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional FreebiePricingDescriptor freebie = 22;
 * @return {?proto.FreebiePricingDescriptor}
 */
proto.PricingDescriptor.prototype.getFreebie = function() {
  return /** @type{?proto.FreebiePricingDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.FreebiePricingDescriptor, 22));
};


/** @param {?proto.FreebiePricingDescriptor|undefined} value */
proto.PricingDescriptor.prototype.setFreebie = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.PricingDescriptor.prototype.clearFreebie = function() {
  this.setFreebie(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.PricingDescriptor.prototype.hasFreebie = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProductPricing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ProductPricing.repeatedFields_, null);
};
goog.inherits(proto.ProductPricing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ProductPricing.displayName = 'proto.ProductPricing';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ProductPricing.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProductPricing.prototype.toObject = function(opt_includeInstance) {
  return proto.ProductPricing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProductPricing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProductPricing.toObject = function(includeInstance, msg) {
  var f, obj = {
    discountsList: jspb.Message.toObjectList(msg.getDiscountsList(),
    proto.SaleDescriptor.toObject, includeInstance),
    manifestList: jspb.Message.toObjectList(msg.getManifestList(),
    proto.PricingDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProductPricing}
 */
proto.ProductPricing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProductPricing;
  return proto.ProductPricing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProductPricing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProductPricing}
 */
proto.ProductPricing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SaleDescriptor;
      reader.readMessage(value,proto.SaleDescriptor.deserializeBinaryFromReader);
      msg.addDiscounts(value);
      break;
    case 2:
      var value = new proto.PricingDescriptor;
      reader.readMessage(value,proto.PricingDescriptor.deserializeBinaryFromReader);
      msg.addManifest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProductPricing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProductPricing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProductPricing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProductPricing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiscountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SaleDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getManifestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PricingDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SaleDescriptor discounts = 1;
 * @return {!Array.<!proto.SaleDescriptor>}
 */
proto.ProductPricing.prototype.getDiscountsList = function() {
  return /** @type{!Array.<!proto.SaleDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SaleDescriptor, 1));
};


/** @param {!Array.<!proto.SaleDescriptor>} value */
proto.ProductPricing.prototype.setDiscountsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SaleDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SaleDescriptor}
 */
proto.ProductPricing.prototype.addDiscounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SaleDescriptor, opt_index);
};


proto.ProductPricing.prototype.clearDiscountsList = function() {
  this.setDiscountsList([]);
};


/**
 * repeated PricingDescriptor manifest = 2;
 * @return {!Array.<!proto.PricingDescriptor>}
 */
proto.ProductPricing.prototype.getManifestList = function() {
  return /** @type{!Array.<!proto.PricingDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PricingDescriptor, 2));
};


/** @param {!Array.<!proto.PricingDescriptor>} value */
proto.ProductPricing.prototype.setManifestList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PricingDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PricingDescriptor}
 */
proto.ProductPricing.prototype.addManifest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PricingDescriptor, opt_index);
};


proto.ProductPricing.prototype.clearManifestList = function() {
  this.setManifestList([]);
};


/**
 * @enum {number}
 */
proto.PricingType = {
  UNIT: 0,
  WEIGHTED: 1,
  FREEBIE: 2
};

/**
 * @enum {number}
 */
proto.PricingWeightTier = {
  OTHER: 0,
  GRAM: 1,
  HALFGRAM: 2,
  QUARTERGRAM: 3,
  DUB: 4,
  EIGHTH: 5,
  QUARTER: 6,
  HALF: 7,
  OUNCE: 8,
  POUND: 9
};

