/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.exportSymbol('proto.Flower', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Flower = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Flower, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Flower.displayName = 'proto.Flower';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Flower.prototype.toObject = function(opt_includeInstance) {
  return proto.Flower.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Flower} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Flower.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.ProductKey.toObject(includeInstance, f),
    productData: (f = msg.getProductData()) && proto.ProductContent.toObject(includeInstance, f),
    materialData: (f = msg.getMaterialData()) && proto.MaterialsData.toObject(includeInstance, f),
    flags: (f = msg.getFlags()) && proto.FlagsDescriptor.toObject(includeInstance, f),
    pricing: (f = msg.getPricing()) && proto.ProductPricing.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Flower}
 */
proto.Flower.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Flower;
  return proto.Flower.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Flower} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Flower}
 */
proto.Flower.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ProductKey;
      reader.readMessage(value,proto.ProductKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 20:
      var value = new proto.ProductContent;
      reader.readMessage(value,proto.ProductContent.deserializeBinaryFromReader);
      msg.setProductData(value);
      break;
    case 21:
      var value = new proto.MaterialsData;
      reader.readMessage(value,proto.MaterialsData.deserializeBinaryFromReader);
      msg.setMaterialData(value);
      break;
    case 22:
      var value = new proto.FlagsDescriptor;
      reader.readMessage(value,proto.FlagsDescriptor.deserializeBinaryFromReader);
      msg.setFlags(value);
      break;
    case 23:
      var value = new proto.ProductPricing;
      reader.readMessage(value,proto.ProductPricing.deserializeBinaryFromReader);
      msg.setPricing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Flower.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Flower.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Flower} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Flower.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ProductKey.serializeBinaryToWriter
    );
  }
  f = message.getProductData();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.ProductContent.serializeBinaryToWriter
    );
  }
  f = message.getMaterialData();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.MaterialsData.serializeBinaryToWriter
    );
  }
  f = message.getFlags();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.FlagsDescriptor.serializeBinaryToWriter
    );
  }
  f = message.getPricing();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.ProductPricing.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductKey key = 1;
 * @return {?proto.ProductKey}
 */
proto.Flower.prototype.getKey = function() {
  return /** @type{?proto.ProductKey} */ (
    jspb.Message.getWrapperField(this, proto.ProductKey, 1));
};


/** @param {?proto.ProductKey|undefined} value */
proto.Flower.prototype.setKey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Flower.prototype.clearKey = function() {
  this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Flower.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProductContent product_data = 20;
 * @return {?proto.ProductContent}
 */
proto.Flower.prototype.getProductData = function() {
  return /** @type{?proto.ProductContent} */ (
    jspb.Message.getWrapperField(this, proto.ProductContent, 20));
};


/** @param {?proto.ProductContent|undefined} value */
proto.Flower.prototype.setProductData = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.Flower.prototype.clearProductData = function() {
  this.setProductData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Flower.prototype.hasProductData = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional MaterialsData material_data = 21;
 * @return {?proto.MaterialsData}
 */
proto.Flower.prototype.getMaterialData = function() {
  return /** @type{?proto.MaterialsData} */ (
    jspb.Message.getWrapperField(this, proto.MaterialsData, 21));
};


/** @param {?proto.MaterialsData|undefined} value */
proto.Flower.prototype.setMaterialData = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.Flower.prototype.clearMaterialData = function() {
  this.setMaterialData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Flower.prototype.hasMaterialData = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional FlagsDescriptor flags = 22;
 * @return {?proto.FlagsDescriptor}
 */
proto.Flower.prototype.getFlags = function() {
  return /** @type{?proto.FlagsDescriptor} */ (
    jspb.Message.getWrapperField(this, proto.FlagsDescriptor, 22));
};


/** @param {?proto.FlagsDescriptor|undefined} value */
proto.Flower.prototype.setFlags = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.Flower.prototype.clearFlags = function() {
  this.setFlags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Flower.prototype.hasFlags = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional ProductPricing pricing = 23;
 * @return {?proto.ProductPricing}
 */
proto.Flower.prototype.getPricing = function() {
  return /** @type{?proto.ProductPricing} */ (
    jspb.Message.getWrapperField(this, proto.ProductPricing, 23));
};


/** @param {?proto.ProductPricing|undefined} value */
proto.Flower.prototype.setPricing = function(value) {
  jspb.Message.setWrapperField(this, 23, value);
};


proto.Flower.prototype.clearPricing = function() {
  this.setPricing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Flower.prototype.hasPricing = function() {
  return jspb.Message.getField(this, 23) != null;
};


