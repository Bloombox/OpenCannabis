// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/Genetics.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from structs/Genetics.proto</summary>
public static partial class GeneticsReflection {

  #region Descriptor
  /// <summary>File descriptor for structs/Genetics.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GeneticsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZzdHJ1Y3RzL0dlbmV0aWNzLnByb3RvGhJjb250ZW50L05hbWUucHJvdG8i",
          "NgoIR2VuZXRpY3MSEwoEbWFsZRgBIAEoCzIFLk5hbWUSFQoGZmVtYWxlGAIg",
          "ASgLMgUuTmFtZUI7CiFpby5ibG9vbWJveC5zY2hlbWEucHJvZHVjdC5zdHJ1",
          "Y3RCD0dlbmV0aWNzU3RydWN0c0gBUAH4AQFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NameReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Genetics), global::Genetics.Parser, new[]{ "Male", "Female" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Genetics : pb::IMessage<Genetics> {
  private static readonly pb::MessageParser<Genetics> _parser = new pb::MessageParser<Genetics>(() => new Genetics());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Genetics> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GeneticsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Genetics() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Genetics(Genetics other) : this() {
    Male = other.male_ != null ? other.Male.Clone() : null;
    Female = other.female_ != null ? other.Female.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Genetics Clone() {
    return new Genetics(this);
  }

  /// <summary>Field number for the "male" field.</summary>
  public const int MaleFieldNumber = 1;
  private global::Name male_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Name Male {
    get { return male_; }
    set {
      male_ = value;
    }
  }

  /// <summary>Field number for the "female" field.</summary>
  public const int FemaleFieldNumber = 2;
  private global::Name female_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Name Female {
    get { return female_; }
    set {
      female_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Genetics);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Genetics other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Male, other.Male)) return false;
    if (!object.Equals(Female, other.Female)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (male_ != null) hash ^= Male.GetHashCode();
    if (female_ != null) hash ^= Female.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (male_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Male);
    }
    if (female_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Female);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (male_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Male);
    }
    if (female_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Female);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Genetics other) {
    if (other == null) {
      return;
    }
    if (other.male_ != null) {
      if (male_ == null) {
        male_ = new global::Name();
      }
      Male.MergeFrom(other.Male);
    }
    if (other.female_ != null) {
      if (female_ == null) {
        female_ = new global::Name();
      }
      Female.MergeFrom(other.Female);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (male_ == null) {
            male_ = new global::Name();
          }
          input.ReadMessage(male_);
          break;
        }
        case 18: {
          if (female_ == null) {
            female_ = new global::Name();
          }
          input.ReadMessage(female_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
