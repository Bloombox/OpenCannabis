// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base/ProductType.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from base/ProductType.proto</summary>
public static partial class ProductTypeReflection {

  #region Descriptor
  /// <summary>File descriptor for base/ProductType.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ProductTypeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZiYXNlL1Byb2R1Y3RUeXBlLnByb3RvGhZiYXNlL1Byb2R1Y3RLaW5kLnBy",
          "b3RvIikKC1Byb2R1Y3RUeXBlEhoKBGtpbmQYASABKA4yDC5Qcm9kdWN0S2lu",
          "ZEIxChdpby5ibG9vbWJveC5zY2hlbWEuYmFzZUIPQmFzZVByb2R1Y3RUeXBl",
          "SAFQAfgBAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ProductKindReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ProductType), global::ProductType.Parser, new[]{ "Kind" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// -- Product Type: Top-level -- //
/// </summary>
public sealed partial class ProductType : pb::IMessage<ProductType> {
  private static readonly pb::MessageParser<ProductType> _parser = new pb::MessageParser<ProductType>(() => new ProductType());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProductType> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProductTypeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductType() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductType(ProductType other) : this() {
    kind_ = other.kind_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductType Clone() {
    return new ProductType(this);
  }

  /// <summary>Field number for the "kind" field.</summary>
  public const int KindFieldNumber = 1;
  private global::ProductKind kind_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProductKind Kind {
    get { return kind_; }
    set {
      kind_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProductType);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProductType other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Kind != other.Kind) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Kind != 0) hash ^= Kind.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Kind != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Kind);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Kind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProductType other) {
    if (other == null) {
      return;
    }
    if (other.Kind != 0) {
      Kind = other.Kind;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          kind_ = (global::ProductKind) input.ReadEnum();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
