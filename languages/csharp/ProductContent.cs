// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content/ProductContent.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from content/ProductContent.proto</summary>
public static partial class ProductContentReflection {

  #region Descriptor
  /// <summary>File descriptor for content/ProductContent.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ProductContentReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chxjb250ZW50L1Byb2R1Y3RDb250ZW50LnByb3RvGhJjb250ZW50L05hbWUu",
          "cHJvdG8aFWNvbnRlbnQvQ29udGVudC5wcm90bxoTY29udGVudC9CcmFuZC5w",
          "cm90bxoVbWVkaWEvTWVkaWFJdGVtLnByb3RvIr8BCg5Qcm9kdWN0Q29udGVu",
          "dBITCgRuYW1lGAEgASgLMgUuTmFtZRIZCgdzdW1tYXJ5GAIgASgLMgguQ29u",
          "dGVudBIVCgVicmFuZBgDIAEoCzIGLkJyYW5kEhkKBW1lZGlhGBQgAygLMgou",
          "TWVkaWFJdGVtEhcKBXVzYWdlGB4gASgLMgguQ29udGVudBIYCgZkb3NhZ2UY",
          "HyABKAsyCC5Db250ZW50EhgKBmFkdmljZRggIAEoCzIILkNvbnRlbnRCLwoa",
          "aW8uYmxvb21ib3guc2NoZW1hLmNvbnRlbnRCD0F0dGFjaGVkQ29udGVudFAB",
          "YgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NameReflection.Descriptor, global::ContentReflection.Descriptor, global::BrandReflection.Descriptor, global::MediaItemReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ProductContent), global::ProductContent.Parser, new[]{ "Name", "Summary", "Brand", "Media", "Usage", "Dosage", "Advice" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ProductContent : pb::IMessage<ProductContent> {
  private static readonly pb::MessageParser<ProductContent> _parser = new pb::MessageParser<ProductContent>(() => new ProductContent());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProductContent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ProductContentReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductContent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductContent(ProductContent other) : this() {
    Name = other.name_ != null ? other.Name.Clone() : null;
    Summary = other.summary_ != null ? other.Summary.Clone() : null;
    Brand = other.brand_ != null ? other.Brand.Clone() : null;
    media_ = other.media_.Clone();
    Usage = other.usage_ != null ? other.Usage.Clone() : null;
    Dosage = other.dosage_ != null ? other.Dosage.Clone() : null;
    Advice = other.advice_ != null ? other.Advice.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProductContent Clone() {
    return new ProductContent(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private global::Name name_;
  /// <summary>
  /// -- Basic Properties
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Name Name {
    get { return name_; }
    set {
      name_ = value;
    }
  }

  /// <summary>Field number for the "summary" field.</summary>
  public const int SummaryFieldNumber = 2;
  private global::Content summary_;
  /// <summary>
  /// narrative summary
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Content Summary {
    get { return summary_; }
    set {
      summary_ = value;
    }
  }

  /// <summary>Field number for the "brand" field.</summary>
  public const int BrandFieldNumber = 3;
  private global::Brand brand_;
  /// <summary>
  /// product's brand
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Brand Brand {
    get { return brand_; }
    set {
      brand_ = value;
    }
  }

  /// <summary>Field number for the "media" field.</summary>
  public const int MediaFieldNumber = 20;
  private static readonly pb::FieldCodec<global::MediaItem> _repeated_media_codec
      = pb::FieldCodec.ForMessage(162, global::MediaItem.Parser);
  private readonly pbc::RepeatedField<global::MediaItem> media_ = new pbc::RepeatedField<global::MediaItem>();
  /// <summary>
  /// -- Media
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MediaItem> Media {
    get { return media_; }
  }

  /// <summary>Field number for the "usage" field.</summary>
  public const int UsageFieldNumber = 30;
  private global::Content usage_;
  /// <summary>
  /// -- Extended Attributes
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Content Usage {
    get { return usage_; }
    set {
      usage_ = value;
    }
  }

  /// <summary>Field number for the "dosage" field.</summary>
  public const int DosageFieldNumber = 31;
  private global::Content dosage_;
  /// <summary>
  /// dosage advice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Content Dosage {
    get { return dosage_; }
    set {
      dosage_ = value;
    }
  }

  /// <summary>Field number for the "advice" field.</summary>
  public const int AdviceFieldNumber = 32;
  private global::Content advice_;
  /// <summary>
  /// internal advice
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Content Advice {
    get { return advice_; }
    set {
      advice_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProductContent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProductContent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Name, other.Name)) return false;
    if (!object.Equals(Summary, other.Summary)) return false;
    if (!object.Equals(Brand, other.Brand)) return false;
    if(!media_.Equals(other.media_)) return false;
    if (!object.Equals(Usage, other.Usage)) return false;
    if (!object.Equals(Dosage, other.Dosage)) return false;
    if (!object.Equals(Advice, other.Advice)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (name_ != null) hash ^= Name.GetHashCode();
    if (summary_ != null) hash ^= Summary.GetHashCode();
    if (brand_ != null) hash ^= Brand.GetHashCode();
    hash ^= media_.GetHashCode();
    if (usage_ != null) hash ^= Usage.GetHashCode();
    if (dosage_ != null) hash ^= Dosage.GetHashCode();
    if (advice_ != null) hash ^= Advice.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (name_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Name);
    }
    if (summary_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Summary);
    }
    if (brand_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Brand);
    }
    media_.WriteTo(output, _repeated_media_codec);
    if (usage_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(Usage);
    }
    if (dosage_ != null) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(Dosage);
    }
    if (advice_ != null) {
      output.WriteRawTag(130, 2);
      output.WriteMessage(Advice);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (name_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
    }
    if (summary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
    }
    if (brand_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Brand);
    }
    size += media_.CalculateSize(_repeated_media_codec);
    if (usage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Usage);
    }
    if (dosage_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Dosage);
    }
    if (advice_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Advice);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProductContent other) {
    if (other == null) {
      return;
    }
    if (other.name_ != null) {
      if (name_ == null) {
        name_ = new global::Name();
      }
      Name.MergeFrom(other.Name);
    }
    if (other.summary_ != null) {
      if (summary_ == null) {
        summary_ = new global::Content();
      }
      Summary.MergeFrom(other.Summary);
    }
    if (other.brand_ != null) {
      if (brand_ == null) {
        brand_ = new global::Brand();
      }
      Brand.MergeFrom(other.Brand);
    }
    media_.Add(other.media_);
    if (other.usage_ != null) {
      if (usage_ == null) {
        usage_ = new global::Content();
      }
      Usage.MergeFrom(other.Usage);
    }
    if (other.dosage_ != null) {
      if (dosage_ == null) {
        dosage_ = new global::Content();
      }
      Dosage.MergeFrom(other.Dosage);
    }
    if (other.advice_ != null) {
      if (advice_ == null) {
        advice_ = new global::Content();
      }
      Advice.MergeFrom(other.Advice);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (name_ == null) {
            name_ = new global::Name();
          }
          input.ReadMessage(name_);
          break;
        }
        case 18: {
          if (summary_ == null) {
            summary_ = new global::Content();
          }
          input.ReadMessage(summary_);
          break;
        }
        case 26: {
          if (brand_ == null) {
            brand_ = new global::Brand();
          }
          input.ReadMessage(brand_);
          break;
        }
        case 162: {
          media_.AddEntriesFrom(input, _repeated_media_codec);
          break;
        }
        case 242: {
          if (usage_ == null) {
            usage_ = new global::Content();
          }
          input.ReadMessage(usage_);
          break;
        }
        case 250: {
          if (dosage_ == null) {
            dosage_ = new global::Content();
          }
          input.ReadMessage(dosage_);
          break;
        }
        case 258: {
          if (advice_ == null) {
            advice_ = new global::Content();
          }
          input.ReadMessage(advice_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
