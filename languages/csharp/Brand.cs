// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content/Brand.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from content/Brand.proto</summary>
public static partial class BrandReflection {

  #region Descriptor
  /// <summary>File descriptor for content/Brand.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BrandReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNjb250ZW50L0JyYW5kLnByb3RvGhJjb250ZW50L05hbWUucHJvdG8aFWNv",
          "bnRlbnQvQ29udGVudC5wcm90bxoVbWVkaWEvTWVkaWFJdGVtLnByb3RvImoK",
          "BUJyYW5kEhMKBG5hbWUYASABKAsyBS5OYW1lEhYKBnBhcmVudBgCIAEoCzIG",
          "LkJyYW5kEhkKB3N1bW1hcnkYAyABKAsyCC5Db250ZW50EhkKBW1lZGlhGBQg",
          "AygLMgouTWVkaWFJdGVtQiwKGmlvLmJsb29tYm94LnNjaGVtYS5jb250ZW50",
          "QgxCcmFuZENvbnRlbnRQAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NameReflection.Descriptor, global::ContentReflection.Descriptor, global::MediaItemReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Brand), global::Brand.Parser, new[]{ "Name", "Parent", "Summary", "Media" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Brand : pb::IMessage<Brand> {
  private static readonly pb::MessageParser<Brand> _parser = new pb::MessageParser<Brand>(() => new Brand());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Brand> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BrandReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Brand() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Brand(Brand other) : this() {
    Name = other.name_ != null ? other.Name.Clone() : null;
    Parent = other.parent_ != null ? other.Parent.Clone() : null;
    Summary = other.summary_ != null ? other.Summary.Clone() : null;
    media_ = other.media_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Brand Clone() {
    return new Brand(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private global::Name name_;
  /// <summary>
  /// -- Basic Properties
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Name Name {
    get { return name_; }
    set {
      name_ = value;
    }
  }

  /// <summary>Field number for the "parent" field.</summary>
  public const int ParentFieldNumber = 2;
  private global::Brand parent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Brand Parent {
    get { return parent_; }
    set {
      parent_ = value;
    }
  }

  /// <summary>Field number for the "summary" field.</summary>
  public const int SummaryFieldNumber = 3;
  private global::Content summary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Content Summary {
    get { return summary_; }
    set {
      summary_ = value;
    }
  }

  /// <summary>Field number for the "media" field.</summary>
  public const int MediaFieldNumber = 20;
  private static readonly pb::FieldCodec<global::MediaItem> _repeated_media_codec
      = pb::FieldCodec.ForMessage(162, global::MediaItem.Parser);
  private readonly pbc::RepeatedField<global::MediaItem> media_ = new pbc::RepeatedField<global::MediaItem>();
  /// <summary>
  /// -- Media
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MediaItem> Media {
    get { return media_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Brand);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Brand other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Name, other.Name)) return false;
    if (!object.Equals(Parent, other.Parent)) return false;
    if (!object.Equals(Summary, other.Summary)) return false;
    if(!media_.Equals(other.media_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (name_ != null) hash ^= Name.GetHashCode();
    if (parent_ != null) hash ^= Parent.GetHashCode();
    if (summary_ != null) hash ^= Summary.GetHashCode();
    hash ^= media_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (name_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Name);
    }
    if (parent_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Parent);
    }
    if (summary_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Summary);
    }
    media_.WriteTo(output, _repeated_media_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (name_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
    }
    if (parent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
    }
    if (summary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Summary);
    }
    size += media_.CalculateSize(_repeated_media_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Brand other) {
    if (other == null) {
      return;
    }
    if (other.name_ != null) {
      if (name_ == null) {
        name_ = new global::Name();
      }
      Name.MergeFrom(other.Name);
    }
    if (other.parent_ != null) {
      if (parent_ == null) {
        parent_ = new global::Brand();
      }
      Parent.MergeFrom(other.Parent);
    }
    if (other.summary_ != null) {
      if (summary_ == null) {
        summary_ = new global::Content();
      }
      Summary.MergeFrom(other.Summary);
    }
    media_.Add(other.media_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (name_ == null) {
            name_ = new global::Name();
          }
          input.ReadMessage(name_);
          break;
        }
        case 18: {
          if (parent_ == null) {
            parent_ = new global::Brand();
          }
          input.ReadMessage(parent_);
          break;
        }
        case 26: {
          if (summary_ == null) {
            summary_ = new global::Content();
          }
          input.ReadMessage(summary_);
          break;
        }
        case 162: {
          media_.AddEntriesFrom(input, _repeated_media_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
