// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content/MaterialsData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from content/MaterialsData.proto</summary>
public static partial class MaterialsDataReflection {

  #region Descriptor
  /// <summary>File descriptor for content/MaterialsData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MaterialsDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chtjb250ZW50L01hdGVyaWFsc0RhdGEucHJvdG8aEnN0cnVjdHMvR3Jvdy5w",
          "cm90bxoVc3RydWN0cy9TcGVjaWVzLnByb3RvGhZzdHJ1Y3RzL0dlbmV0aWNz",
          "LnByb3RvInEKDU1hdGVyaWFsc0RhdGESEwoLaW5ncmVkaWVudHMYASADKAkS",
          "EwoEZ3JvdxgCIAEoDjIFLkdyb3cSGQoHc3BlY2llcxgDIAEoDjIILlNwZWNp",
          "ZXMSGwoIZ2VuZXRpY3MYBCABKAsyCS5HZW5ldGljc0IeChppby5ibG9vbWJv",
          "eC5zY2hlbWEuY29udGVudFABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::GrowReflection.Descriptor, global::SpeciesReflection.Descriptor, global::GeneticsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MaterialsData), global::MaterialsData.Parser, new[]{ "Ingredients", "Grow", "Species", "Genetics" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MaterialsData : pb::IMessage<MaterialsData> {
  private static readonly pb::MessageParser<MaterialsData> _parser = new pb::MessageParser<MaterialsData>(() => new MaterialsData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MaterialsData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MaterialsDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MaterialsData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MaterialsData(MaterialsData other) : this() {
    ingredients_ = other.ingredients_.Clone();
    grow_ = other.grow_;
    species_ = other.species_;
    Genetics = other.genetics_ != null ? other.Genetics.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MaterialsData Clone() {
    return new MaterialsData(this);
  }

  /// <summary>Field number for the "ingredients" field.</summary>
  public const int IngredientsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_ingredients_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> ingredients_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Ingredients {
    get { return ingredients_; }
  }

  /// <summary>Field number for the "grow" field.</summary>
  public const int GrowFieldNumber = 2;
  private global::Grow grow_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Grow Grow {
    get { return grow_; }
    set {
      grow_ = value;
    }
  }

  /// <summary>Field number for the "species" field.</summary>
  public const int SpeciesFieldNumber = 3;
  private global::Species species_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Species Species {
    get { return species_; }
    set {
      species_ = value;
    }
  }

  /// <summary>Field number for the "genetics" field.</summary>
  public const int GeneticsFieldNumber = 4;
  private global::Genetics genetics_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Genetics Genetics {
    get { return genetics_; }
    set {
      genetics_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MaterialsData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MaterialsData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ingredients_.Equals(other.ingredients_)) return false;
    if (Grow != other.Grow) return false;
    if (Species != other.Species) return false;
    if (!object.Equals(Genetics, other.Genetics)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ingredients_.GetHashCode();
    if (Grow != 0) hash ^= Grow.GetHashCode();
    if (Species != 0) hash ^= Species.GetHashCode();
    if (genetics_ != null) hash ^= Genetics.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ingredients_.WriteTo(output, _repeated_ingredients_codec);
    if (Grow != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Grow);
    }
    if (Species != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Species);
    }
    if (genetics_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Genetics);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ingredients_.CalculateSize(_repeated_ingredients_codec);
    if (Grow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Grow);
    }
    if (Species != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Species);
    }
    if (genetics_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Genetics);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MaterialsData other) {
    if (other == null) {
      return;
    }
    ingredients_.Add(other.ingredients_);
    if (other.Grow != 0) {
      Grow = other.Grow;
    }
    if (other.Species != 0) {
      Species = other.Species;
    }
    if (other.genetics_ != null) {
      if (genetics_ == null) {
        genetics_ = new global::Genetics();
      }
      Genetics.MergeFrom(other.Genetics);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          ingredients_.AddEntriesFrom(input, _repeated_ingredients_codec);
          break;
        }
        case 16: {
          grow_ = (global::Grow) input.ReadEnum();
          break;
        }
        case 24: {
          species_ = (global::Species) input.ReadEnum();
          break;
        }
        case 34: {
          if (genetics_ == null) {
            genetics_ = new global::Genetics();
          }
          input.ReadMessage(genetics_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
