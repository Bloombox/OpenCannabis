// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: products/Flower.proto

package io.bloombox.schema.product;

public final class FlowerProduct {
  private FlowerProduct() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlowerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Flower)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    boolean hasKey();
    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    io.bloombox.schema.base.ProductKey getKey();
    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    io.bloombox.schema.base.ProductKeyOrBuilder getKeyOrBuilder();

    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    boolean hasProductData();
    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    io.bloombox.schema.content.ProductContent getProductData();
    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    io.bloombox.schema.content.ProductContentOrBuilder getProductDataOrBuilder();

    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    boolean hasMaterialData();
    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    io.bloombox.schema.content.MaterialsData getMaterialData();
    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    io.bloombox.schema.content.MaterialsDataOrBuilder getMaterialDataOrBuilder();

    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    boolean hasFlags();
    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    io.bloombox.schema.product.struct.FlagsDescriptor getFlags();
    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder getFlagsOrBuilder();

    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    boolean hasPricing();
    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    io.bloombox.schema.product.struct.ProductPricing getPricing();
    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    io.bloombox.schema.product.struct.ProductPricingOrBuilder getPricingOrBuilder();
  }
  /**
   * Protobuf type {@code Flower}
   */
  public  static final class Flower extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Flower)
      FlowerOrBuilder {
    // Use Flower.newBuilder() to construct.
    private Flower(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Flower() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Flower(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.bloombox.schema.base.ProductKey.Builder subBuilder = null;
              if (key_ != null) {
                subBuilder = key_.toBuilder();
              }
              key_ = input.readMessage(io.bloombox.schema.base.ProductKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(key_);
                key_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              io.bloombox.schema.content.ProductContent.Builder subBuilder = null;
              if (productData_ != null) {
                subBuilder = productData_.toBuilder();
              }
              productData_ = input.readMessage(io.bloombox.schema.content.ProductContent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(productData_);
                productData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              io.bloombox.schema.content.MaterialsData.Builder subBuilder = null;
              if (materialData_ != null) {
                subBuilder = materialData_.toBuilder();
              }
              materialData_ = input.readMessage(io.bloombox.schema.content.MaterialsData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(materialData_);
                materialData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              io.bloombox.schema.product.struct.FlagsDescriptor.Builder subBuilder = null;
              if (flags_ != null) {
                subBuilder = flags_.toBuilder();
              }
              flags_ = input.readMessage(io.bloombox.schema.product.struct.FlagsDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flags_);
                flags_ = subBuilder.buildPartial();
              }

              break;
            }
            case 186: {
              io.bloombox.schema.product.struct.ProductPricing.Builder subBuilder = null;
              if (pricing_ != null) {
                subBuilder = pricing_.toBuilder();
              }
              pricing_ = input.readMessage(io.bloombox.schema.product.struct.ProductPricing.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pricing_);
                pricing_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bloombox.schema.product.FlowerProduct.internal_static_Flower_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bloombox.schema.product.FlowerProduct.internal_static_Flower_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bloombox.schema.product.FlowerProduct.Flower.class, io.bloombox.schema.product.FlowerProduct.Flower.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private io.bloombox.schema.base.ProductKey key_;
    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    public boolean hasKey() {
      return key_ != null;
    }
    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    public io.bloombox.schema.base.ProductKey getKey() {
      return key_ == null ? io.bloombox.schema.base.ProductKey.getDefaultInstance() : key_;
    }
    /**
     * <pre>
     * -- Object Key
     * </pre>
     *
     * <code>.ProductKey key = 1;</code>
     */
    public io.bloombox.schema.base.ProductKeyOrBuilder getKeyOrBuilder() {
      return getKey();
    }

    public static final int PRODUCT_DATA_FIELD_NUMBER = 20;
    private io.bloombox.schema.content.ProductContent productData_;
    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    public boolean hasProductData() {
      return productData_ != null;
    }
    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    public io.bloombox.schema.content.ProductContent getProductData() {
      return productData_ == null ? io.bloombox.schema.content.ProductContent.getDefaultInstance() : productData_;
    }
    /**
     * <pre>
     * -- Basic Product &amp; Materials Data
     * </pre>
     *
     * <code>.ProductContent product_data = 20;</code>
     */
    public io.bloombox.schema.content.ProductContentOrBuilder getProductDataOrBuilder() {
      return getProductData();
    }

    public static final int MATERIAL_DATA_FIELD_NUMBER = 21;
    private io.bloombox.schema.content.MaterialsData materialData_;
    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    public boolean hasMaterialData() {
      return materialData_ != null;
    }
    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    public io.bloombox.schema.content.MaterialsData getMaterialData() {
      return materialData_ == null ? io.bloombox.schema.content.MaterialsData.getDefaultInstance() : materialData_;
    }
    /**
     * <code>.MaterialsData material_data = 21;</code>
     */
    public io.bloombox.schema.content.MaterialsDataOrBuilder getMaterialDataOrBuilder() {
      return getMaterialData();
    }

    public static final int FLAGS_FIELD_NUMBER = 22;
    private io.bloombox.schema.product.struct.FlagsDescriptor flags_;
    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    public boolean hasFlags() {
      return flags_ != null;
    }
    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    public io.bloombox.schema.product.struct.FlagsDescriptor getFlags() {
      return flags_ == null ? io.bloombox.schema.product.struct.FlagsDescriptor.getDefaultInstance() : flags_;
    }
    /**
     * <pre>
     * -- Flags and Pricing
     * </pre>
     *
     * <code>.FlagsDescriptor flags = 22;</code>
     */
    public io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder getFlagsOrBuilder() {
      return getFlags();
    }

    public static final int PRICING_FIELD_NUMBER = 23;
    private io.bloombox.schema.product.struct.ProductPricing pricing_;
    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    public boolean hasPricing() {
      return pricing_ != null;
    }
    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    public io.bloombox.schema.product.struct.ProductPricing getPricing() {
      return pricing_ == null ? io.bloombox.schema.product.struct.ProductPricing.getDefaultInstance() : pricing_;
    }
    /**
     * <code>.ProductPricing pricing = 23;</code>
     */
    public io.bloombox.schema.product.struct.ProductPricingOrBuilder getPricingOrBuilder() {
      return getPricing();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != null) {
        output.writeMessage(1, getKey());
      }
      if (productData_ != null) {
        output.writeMessage(20, getProductData());
      }
      if (materialData_ != null) {
        output.writeMessage(21, getMaterialData());
      }
      if (flags_ != null) {
        output.writeMessage(22, getFlags());
      }
      if (pricing_ != null) {
        output.writeMessage(23, getPricing());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKey());
      }
      if (productData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getProductData());
      }
      if (materialData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getMaterialData());
      }
      if (flags_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getFlags());
      }
      if (pricing_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getPricing());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.bloombox.schema.product.FlowerProduct.Flower)) {
        return super.equals(obj);
      }
      io.bloombox.schema.product.FlowerProduct.Flower other = (io.bloombox.schema.product.FlowerProduct.Flower) obj;

      boolean result = true;
      result = result && (hasKey() == other.hasKey());
      if (hasKey()) {
        result = result && getKey()
            .equals(other.getKey());
      }
      result = result && (hasProductData() == other.hasProductData());
      if (hasProductData()) {
        result = result && getProductData()
            .equals(other.getProductData());
      }
      result = result && (hasMaterialData() == other.hasMaterialData());
      if (hasMaterialData()) {
        result = result && getMaterialData()
            .equals(other.getMaterialData());
      }
      result = result && (hasFlags() == other.hasFlags());
      if (hasFlags()) {
        result = result && getFlags()
            .equals(other.getFlags());
      }
      result = result && (hasPricing() == other.hasPricing());
      if (hasPricing()) {
        result = result && getPricing()
            .equals(other.getPricing());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasProductData()) {
        hash = (37 * hash) + PRODUCT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getProductData().hashCode();
      }
      if (hasMaterialData()) {
        hash = (37 * hash) + MATERIAL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getMaterialData().hashCode();
      }
      if (hasFlags()) {
        hash = (37 * hash) + FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getFlags().hashCode();
      }
      if (hasPricing()) {
        hash = (37 * hash) + PRICING_FIELD_NUMBER;
        hash = (53 * hash) + getPricing().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.bloombox.schema.product.FlowerProduct.Flower parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.bloombox.schema.product.FlowerProduct.Flower prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Flower}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Flower)
        io.bloombox.schema.product.FlowerProduct.FlowerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.bloombox.schema.product.FlowerProduct.internal_static_Flower_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.bloombox.schema.product.FlowerProduct.internal_static_Flower_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.bloombox.schema.product.FlowerProduct.Flower.class, io.bloombox.schema.product.FlowerProduct.Flower.Builder.class);
      }

      // Construct using io.bloombox.schema.product.FlowerProduct.Flower.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (keyBuilder_ == null) {
          key_ = null;
        } else {
          key_ = null;
          keyBuilder_ = null;
        }
        if (productDataBuilder_ == null) {
          productData_ = null;
        } else {
          productData_ = null;
          productDataBuilder_ = null;
        }
        if (materialDataBuilder_ == null) {
          materialData_ = null;
        } else {
          materialData_ = null;
          materialDataBuilder_ = null;
        }
        if (flagsBuilder_ == null) {
          flags_ = null;
        } else {
          flags_ = null;
          flagsBuilder_ = null;
        }
        if (pricingBuilder_ == null) {
          pricing_ = null;
        } else {
          pricing_ = null;
          pricingBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.bloombox.schema.product.FlowerProduct.internal_static_Flower_descriptor;
      }

      public io.bloombox.schema.product.FlowerProduct.Flower getDefaultInstanceForType() {
        return io.bloombox.schema.product.FlowerProduct.Flower.getDefaultInstance();
      }

      public io.bloombox.schema.product.FlowerProduct.Flower build() {
        io.bloombox.schema.product.FlowerProduct.Flower result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.bloombox.schema.product.FlowerProduct.Flower buildPartial() {
        io.bloombox.schema.product.FlowerProduct.Flower result = new io.bloombox.schema.product.FlowerProduct.Flower(this);
        if (keyBuilder_ == null) {
          result.key_ = key_;
        } else {
          result.key_ = keyBuilder_.build();
        }
        if (productDataBuilder_ == null) {
          result.productData_ = productData_;
        } else {
          result.productData_ = productDataBuilder_.build();
        }
        if (materialDataBuilder_ == null) {
          result.materialData_ = materialData_;
        } else {
          result.materialData_ = materialDataBuilder_.build();
        }
        if (flagsBuilder_ == null) {
          result.flags_ = flags_;
        } else {
          result.flags_ = flagsBuilder_.build();
        }
        if (pricingBuilder_ == null) {
          result.pricing_ = pricing_;
        } else {
          result.pricing_ = pricingBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.bloombox.schema.product.FlowerProduct.Flower) {
          return mergeFrom((io.bloombox.schema.product.FlowerProduct.Flower)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.bloombox.schema.product.FlowerProduct.Flower other) {
        if (other == io.bloombox.schema.product.FlowerProduct.Flower.getDefaultInstance()) return this;
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        if (other.hasProductData()) {
          mergeProductData(other.getProductData());
        }
        if (other.hasMaterialData()) {
          mergeMaterialData(other.getMaterialData());
        }
        if (other.hasFlags()) {
          mergeFlags(other.getFlags());
        }
        if (other.hasPricing()) {
          mergePricing(other.getPricing());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.bloombox.schema.product.FlowerProduct.Flower parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.bloombox.schema.product.FlowerProduct.Flower) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.bloombox.schema.base.ProductKey key_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.base.ProductKey, io.bloombox.schema.base.ProductKey.Builder, io.bloombox.schema.base.ProductKeyOrBuilder> keyBuilder_;
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public boolean hasKey() {
        return keyBuilder_ != null || key_ != null;
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public io.bloombox.schema.base.ProductKey getKey() {
        if (keyBuilder_ == null) {
          return key_ == null ? io.bloombox.schema.base.ProductKey.getDefaultInstance() : key_;
        } else {
          return keyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public Builder setKey(io.bloombox.schema.base.ProductKey value) {
        if (keyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
          onChanged();
        } else {
          keyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public Builder setKey(
          io.bloombox.schema.base.ProductKey.Builder builderForValue) {
        if (keyBuilder_ == null) {
          key_ = builderForValue.build();
          onChanged();
        } else {
          keyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public Builder mergeKey(io.bloombox.schema.base.ProductKey value) {
        if (keyBuilder_ == null) {
          if (key_ != null) {
            key_ =
              io.bloombox.schema.base.ProductKey.newBuilder(key_).mergeFrom(value).buildPartial();
          } else {
            key_ = value;
          }
          onChanged();
        } else {
          keyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public Builder clearKey() {
        if (keyBuilder_ == null) {
          key_ = null;
          onChanged();
        } else {
          key_ = null;
          keyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public io.bloombox.schema.base.ProductKey.Builder getKeyBuilder() {
        
        onChanged();
        return getKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      public io.bloombox.schema.base.ProductKeyOrBuilder getKeyOrBuilder() {
        if (keyBuilder_ != null) {
          return keyBuilder_.getMessageOrBuilder();
        } else {
          return key_ == null ?
              io.bloombox.schema.base.ProductKey.getDefaultInstance() : key_;
        }
      }
      /**
       * <pre>
       * -- Object Key
       * </pre>
       *
       * <code>.ProductKey key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.base.ProductKey, io.bloombox.schema.base.ProductKey.Builder, io.bloombox.schema.base.ProductKeyOrBuilder> 
          getKeyFieldBuilder() {
        if (keyBuilder_ == null) {
          keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.base.ProductKey, io.bloombox.schema.base.ProductKey.Builder, io.bloombox.schema.base.ProductKeyOrBuilder>(
                  getKey(),
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        return keyBuilder_;
      }

      private io.bloombox.schema.content.ProductContent productData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.content.ProductContent, io.bloombox.schema.content.ProductContent.Builder, io.bloombox.schema.content.ProductContentOrBuilder> productDataBuilder_;
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public boolean hasProductData() {
        return productDataBuilder_ != null || productData_ != null;
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public io.bloombox.schema.content.ProductContent getProductData() {
        if (productDataBuilder_ == null) {
          return productData_ == null ? io.bloombox.schema.content.ProductContent.getDefaultInstance() : productData_;
        } else {
          return productDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public Builder setProductData(io.bloombox.schema.content.ProductContent value) {
        if (productDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          productData_ = value;
          onChanged();
        } else {
          productDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public Builder setProductData(
          io.bloombox.schema.content.ProductContent.Builder builderForValue) {
        if (productDataBuilder_ == null) {
          productData_ = builderForValue.build();
          onChanged();
        } else {
          productDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public Builder mergeProductData(io.bloombox.schema.content.ProductContent value) {
        if (productDataBuilder_ == null) {
          if (productData_ != null) {
            productData_ =
              io.bloombox.schema.content.ProductContent.newBuilder(productData_).mergeFrom(value).buildPartial();
          } else {
            productData_ = value;
          }
          onChanged();
        } else {
          productDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public Builder clearProductData() {
        if (productDataBuilder_ == null) {
          productData_ = null;
          onChanged();
        } else {
          productData_ = null;
          productDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public io.bloombox.schema.content.ProductContent.Builder getProductDataBuilder() {
        
        onChanged();
        return getProductDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      public io.bloombox.schema.content.ProductContentOrBuilder getProductDataOrBuilder() {
        if (productDataBuilder_ != null) {
          return productDataBuilder_.getMessageOrBuilder();
        } else {
          return productData_ == null ?
              io.bloombox.schema.content.ProductContent.getDefaultInstance() : productData_;
        }
      }
      /**
       * <pre>
       * -- Basic Product &amp; Materials Data
       * </pre>
       *
       * <code>.ProductContent product_data = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.content.ProductContent, io.bloombox.schema.content.ProductContent.Builder, io.bloombox.schema.content.ProductContentOrBuilder> 
          getProductDataFieldBuilder() {
        if (productDataBuilder_ == null) {
          productDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.content.ProductContent, io.bloombox.schema.content.ProductContent.Builder, io.bloombox.schema.content.ProductContentOrBuilder>(
                  getProductData(),
                  getParentForChildren(),
                  isClean());
          productData_ = null;
        }
        return productDataBuilder_;
      }

      private io.bloombox.schema.content.MaterialsData materialData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.content.MaterialsData, io.bloombox.schema.content.MaterialsData.Builder, io.bloombox.schema.content.MaterialsDataOrBuilder> materialDataBuilder_;
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public boolean hasMaterialData() {
        return materialDataBuilder_ != null || materialData_ != null;
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public io.bloombox.schema.content.MaterialsData getMaterialData() {
        if (materialDataBuilder_ == null) {
          return materialData_ == null ? io.bloombox.schema.content.MaterialsData.getDefaultInstance() : materialData_;
        } else {
          return materialDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public Builder setMaterialData(io.bloombox.schema.content.MaterialsData value) {
        if (materialDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          materialData_ = value;
          onChanged();
        } else {
          materialDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public Builder setMaterialData(
          io.bloombox.schema.content.MaterialsData.Builder builderForValue) {
        if (materialDataBuilder_ == null) {
          materialData_ = builderForValue.build();
          onChanged();
        } else {
          materialDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public Builder mergeMaterialData(io.bloombox.schema.content.MaterialsData value) {
        if (materialDataBuilder_ == null) {
          if (materialData_ != null) {
            materialData_ =
              io.bloombox.schema.content.MaterialsData.newBuilder(materialData_).mergeFrom(value).buildPartial();
          } else {
            materialData_ = value;
          }
          onChanged();
        } else {
          materialDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public Builder clearMaterialData() {
        if (materialDataBuilder_ == null) {
          materialData_ = null;
          onChanged();
        } else {
          materialData_ = null;
          materialDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public io.bloombox.schema.content.MaterialsData.Builder getMaterialDataBuilder() {
        
        onChanged();
        return getMaterialDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      public io.bloombox.schema.content.MaterialsDataOrBuilder getMaterialDataOrBuilder() {
        if (materialDataBuilder_ != null) {
          return materialDataBuilder_.getMessageOrBuilder();
        } else {
          return materialData_ == null ?
              io.bloombox.schema.content.MaterialsData.getDefaultInstance() : materialData_;
        }
      }
      /**
       * <code>.MaterialsData material_data = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.content.MaterialsData, io.bloombox.schema.content.MaterialsData.Builder, io.bloombox.schema.content.MaterialsDataOrBuilder> 
          getMaterialDataFieldBuilder() {
        if (materialDataBuilder_ == null) {
          materialDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.content.MaterialsData, io.bloombox.schema.content.MaterialsData.Builder, io.bloombox.schema.content.MaterialsDataOrBuilder>(
                  getMaterialData(),
                  getParentForChildren(),
                  isClean());
          materialData_ = null;
        }
        return materialDataBuilder_;
      }

      private io.bloombox.schema.product.struct.FlagsDescriptor flags_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.FlagsDescriptor, io.bloombox.schema.product.struct.FlagsDescriptor.Builder, io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder> flagsBuilder_;
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public boolean hasFlags() {
        return flagsBuilder_ != null || flags_ != null;
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public io.bloombox.schema.product.struct.FlagsDescriptor getFlags() {
        if (flagsBuilder_ == null) {
          return flags_ == null ? io.bloombox.schema.product.struct.FlagsDescriptor.getDefaultInstance() : flags_;
        } else {
          return flagsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public Builder setFlags(io.bloombox.schema.product.struct.FlagsDescriptor value) {
        if (flagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flags_ = value;
          onChanged();
        } else {
          flagsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public Builder setFlags(
          io.bloombox.schema.product.struct.FlagsDescriptor.Builder builderForValue) {
        if (flagsBuilder_ == null) {
          flags_ = builderForValue.build();
          onChanged();
        } else {
          flagsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public Builder mergeFlags(io.bloombox.schema.product.struct.FlagsDescriptor value) {
        if (flagsBuilder_ == null) {
          if (flags_ != null) {
            flags_ =
              io.bloombox.schema.product.struct.FlagsDescriptor.newBuilder(flags_).mergeFrom(value).buildPartial();
          } else {
            flags_ = value;
          }
          onChanged();
        } else {
          flagsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public Builder clearFlags() {
        if (flagsBuilder_ == null) {
          flags_ = null;
          onChanged();
        } else {
          flags_ = null;
          flagsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public io.bloombox.schema.product.struct.FlagsDescriptor.Builder getFlagsBuilder() {
        
        onChanged();
        return getFlagsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      public io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder getFlagsOrBuilder() {
        if (flagsBuilder_ != null) {
          return flagsBuilder_.getMessageOrBuilder();
        } else {
          return flags_ == null ?
              io.bloombox.schema.product.struct.FlagsDescriptor.getDefaultInstance() : flags_;
        }
      }
      /**
       * <pre>
       * -- Flags and Pricing
       * </pre>
       *
       * <code>.FlagsDescriptor flags = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.FlagsDescriptor, io.bloombox.schema.product.struct.FlagsDescriptor.Builder, io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder> 
          getFlagsFieldBuilder() {
        if (flagsBuilder_ == null) {
          flagsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.product.struct.FlagsDescriptor, io.bloombox.schema.product.struct.FlagsDescriptor.Builder, io.bloombox.schema.product.struct.FlagsDescriptorOrBuilder>(
                  getFlags(),
                  getParentForChildren(),
                  isClean());
          flags_ = null;
        }
        return flagsBuilder_;
      }

      private io.bloombox.schema.product.struct.ProductPricing pricing_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.ProductPricing, io.bloombox.schema.product.struct.ProductPricing.Builder, io.bloombox.schema.product.struct.ProductPricingOrBuilder> pricingBuilder_;
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public boolean hasPricing() {
        return pricingBuilder_ != null || pricing_ != null;
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public io.bloombox.schema.product.struct.ProductPricing getPricing() {
        if (pricingBuilder_ == null) {
          return pricing_ == null ? io.bloombox.schema.product.struct.ProductPricing.getDefaultInstance() : pricing_;
        } else {
          return pricingBuilder_.getMessage();
        }
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public Builder setPricing(io.bloombox.schema.product.struct.ProductPricing value) {
        if (pricingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pricing_ = value;
          onChanged();
        } else {
          pricingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public Builder setPricing(
          io.bloombox.schema.product.struct.ProductPricing.Builder builderForValue) {
        if (pricingBuilder_ == null) {
          pricing_ = builderForValue.build();
          onChanged();
        } else {
          pricingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public Builder mergePricing(io.bloombox.schema.product.struct.ProductPricing value) {
        if (pricingBuilder_ == null) {
          if (pricing_ != null) {
            pricing_ =
              io.bloombox.schema.product.struct.ProductPricing.newBuilder(pricing_).mergeFrom(value).buildPartial();
          } else {
            pricing_ = value;
          }
          onChanged();
        } else {
          pricingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public Builder clearPricing() {
        if (pricingBuilder_ == null) {
          pricing_ = null;
          onChanged();
        } else {
          pricing_ = null;
          pricingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public io.bloombox.schema.product.struct.ProductPricing.Builder getPricingBuilder() {
        
        onChanged();
        return getPricingFieldBuilder().getBuilder();
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      public io.bloombox.schema.product.struct.ProductPricingOrBuilder getPricingOrBuilder() {
        if (pricingBuilder_ != null) {
          return pricingBuilder_.getMessageOrBuilder();
        } else {
          return pricing_ == null ?
              io.bloombox.schema.product.struct.ProductPricing.getDefaultInstance() : pricing_;
        }
      }
      /**
       * <code>.ProductPricing pricing = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.bloombox.schema.product.struct.ProductPricing, io.bloombox.schema.product.struct.ProductPricing.Builder, io.bloombox.schema.product.struct.ProductPricingOrBuilder> 
          getPricingFieldBuilder() {
        if (pricingBuilder_ == null) {
          pricingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.bloombox.schema.product.struct.ProductPricing, io.bloombox.schema.product.struct.ProductPricing.Builder, io.bloombox.schema.product.struct.ProductPricingOrBuilder>(
                  getPricing(),
                  getParentForChildren(),
                  isClean());
          pricing_ = null;
        }
        return pricingBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Flower)
    }

    // @@protoc_insertion_point(class_scope:Flower)
    private static final io.bloombox.schema.product.FlowerProduct.Flower DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.bloombox.schema.product.FlowerProduct.Flower();
    }

    public static io.bloombox.schema.product.FlowerProduct.Flower getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Flower>
        PARSER = new com.google.protobuf.AbstractParser<Flower>() {
      public Flower parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Flower(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Flower> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Flower> getParserForType() {
      return PARSER;
    }

    public io.bloombox.schema.product.FlowerProduct.Flower getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Flower_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Flower_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025products/Flower.proto\032\025base/ProductKey" +
      ".proto\032\033content/MaterialsData.proto\032\034con" +
      "tent/ProductContent.proto\032\035structs/Flags" +
      "Descriptor.proto\032\'structs/pricing/Pricin" +
      "gDescriptor.proto\"\263\001\n\006Flower\022\030\n\003key\030\001 \001(" +
      "\0132\013.ProductKey\022%\n\014product_data\030\024 \001(\0132\017.P" +
      "roductContent\022%\n\rmaterial_data\030\025 \001(\0132\016.M" +
      "aterialsData\022\037\n\005flags\030\026 \001(\0132\020.FlagsDescr" +
      "iptor\022 \n\007pricing\030\027 \001(\0132\017.ProductPricingB" +
      "-\n\032io.bloombox.schema.productB\rFlowerPro",
      "ductP\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.bloombox.schema.base.BaseProductKey.getDescriptor(),
          io.bloombox.schema.content.MaterialsContent.getDescriptor(),
          io.bloombox.schema.content.AttachedContent.getDescriptor(),
          io.bloombox.schema.product.struct.BaseStructs.getDescriptor(),
          io.bloombox.schema.product.struct.ProductPricingSpec.getDescriptor(),
        }, assigner);
    internal_static_Flower_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Flower_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Flower_descriptor,
        new java.lang.String[] { "Key", "ProductData", "MaterialData", "Flags", "Pricing", });
    io.bloombox.schema.base.BaseProductKey.getDescriptor();
    io.bloombox.schema.content.MaterialsContent.getDescriptor();
    io.bloombox.schema.content.AttachedContent.getDescriptor();
    io.bloombox.schema.product.struct.BaseStructs.getDescriptor();
    io.bloombox.schema.product.struct.ProductPricingSpec.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
