// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/FlagsDescriptor.proto

package io.bloombox.schema.product.struct;

/**
 * Protobuf enum {@code ProductFlag}
 */
public enum ProductFlag
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>VISIBLE = 0;</code>
   */
  VISIBLE(0),
  /**
   * <code>PREMIUM = 1;</code>
   */
  PREMIUM(1),
  /**
   * <code>FEATURED = 2;</code>
   */
  FEATURED(2),
  /**
   * <code>LASTCHANCE = 3;</code>
   */
  LASTCHANCE(3),
  /**
   * <code>INHOUSE = 4;</code>
   */
  INHOUSE(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>VISIBLE = 0;</code>
   */
  public static final int VISIBLE_VALUE = 0;
  /**
   * <code>PREMIUM = 1;</code>
   */
  public static final int PREMIUM_VALUE = 1;
  /**
   * <code>FEATURED = 2;</code>
   */
  public static final int FEATURED_VALUE = 2;
  /**
   * <code>LASTCHANCE = 3;</code>
   */
  public static final int LASTCHANCE_VALUE = 3;
  /**
   * <code>INHOUSE = 4;</code>
   */
  public static final int INHOUSE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ProductFlag valueOf(int value) {
    return forNumber(value);
  }

  public static ProductFlag forNumber(int value) {
    switch (value) {
      case 0: return VISIBLE;
      case 1: return PREMIUM;
      case 2: return FEATURED;
      case 3: return LASTCHANCE;
      case 4: return INHOUSE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ProductFlag>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ProductFlag> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ProductFlag>() {
          public ProductFlag findValueByNumber(int number) {
            return ProductFlag.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.bloombox.schema.product.struct.FlagsDescriptorOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final ProductFlag[] VALUES = values();

  public static ProductFlag valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ProductFlag(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ProductFlag)
}

