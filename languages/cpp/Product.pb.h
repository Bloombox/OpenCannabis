// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Product.proto

#ifndef PROTOBUF_Product_2eproto__INCLUDED
#define PROTOBUF_Product_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base/ProductKey.pb.h"
#include "base/ProductType.pb.h"
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ProductKey;
class ProductKeyDefaultTypeInternal;
extern ProductKeyDefaultTypeInternal _ProductKey_default_instance_;
class ProductType;
class ProductTypeDefaultTypeInternal;
extern ProductTypeDefaultTypeInternal _ProductType_default_instance_;
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace protobuf_Product_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Product_2eproto

// ===================================================================

class Product : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Product& default_instance();

  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Product* other);

  // implements Message ----------------------------------------------

  inline Product* New() const PROTOBUF_FINAL { return New(NULL); }

  Product* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Product* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProductKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::ProductKey& key() const;
  ::ProductKey* mutable_key();
  ::ProductKey* release_key();
  void set_allocated_key(::ProductKey* key);

  // .ProductType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::ProductType& type() const;
  ::ProductType* mutable_type();
  ::ProductType* release_type();
  void set_allocated_type(::ProductType* type);

  // .google.protobuf.Any data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // @@protoc_insertion_point(class_scope:Product)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProductKey* key_;
  ::ProductType* type_;
  ::google::protobuf::Any* data_;
  mutable int _cached_size_;
  friend struct protobuf_Product_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Product

// .ProductKey key = 1;
inline bool Product::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void Product::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::ProductKey& Product::key() const {
  // @@protoc_insertion_point(field_get:Product.key)
  return key_ != NULL ? *key_
                         : *::ProductKey::internal_default_instance();
}
inline ::ProductKey* Product::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::ProductKey;
  }
  // @@protoc_insertion_point(field_mutable:Product.key)
  return key_;
}
inline ::ProductKey* Product::release_key() {
  // @@protoc_insertion_point(field_release:Product.key)
  
  ::ProductKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void Product::set_allocated_key(::ProductKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Product.key)
}

// .ProductType type = 2;
inline bool Product::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void Product::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) delete type_;
  type_ = NULL;
}
inline const ::ProductType& Product::type() const {
  // @@protoc_insertion_point(field_get:Product.type)
  return type_ != NULL ? *type_
                         : *::ProductType::internal_default_instance();
}
inline ::ProductType* Product::mutable_type() {
  
  if (type_ == NULL) {
    type_ = new ::ProductType;
  }
  // @@protoc_insertion_point(field_mutable:Product.type)
  return type_;
}
inline ::ProductType* Product::release_type() {
  // @@protoc_insertion_point(field_release:Product.type)
  
  ::ProductType* temp = type_;
  type_ = NULL;
  return temp;
}
inline void Product::set_allocated_type(::ProductType* type) {
  delete type_;
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Product.type)
}

// .google.protobuf.Any data = 3;
inline bool Product::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void Product::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& Product::data() const {
  // @@protoc_insertion_point(field_get:Product.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* Product::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:Product.data)
  return data_;
}
inline ::google::protobuf::Any* Product::release_data() {
  // @@protoc_insertion_point(field_release:Product.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Product::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Product.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Product_2eproto__INCLUDED
