// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structs/pricing/PricingDescriptor.proto

package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// -- Pricing: Objects
type PricingType int32

const (
	PricingType_UNIT     PricingType = 0
	PricingType_WEIGHTED PricingType = 1
	PricingType_FREEBIE  PricingType = 2
)

var PricingType_name = map[int32]string{
	0: "UNIT",
	1: "WEIGHTED",
	2: "FREEBIE",
}
var PricingType_value = map[string]int32{
	"UNIT":     0,
	"WEIGHTED": 1,
	"FREEBIE":  2,
}

func (x PricingType) String() string {
	return proto.EnumName(PricingType_name, int32(x))
}
func (PricingType) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

type PricingWeightTier int32

const (
	PricingWeightTier_OTHER       PricingWeightTier = 0
	PricingWeightTier_GRAM        PricingWeightTier = 1
	PricingWeightTier_HALFGRAM    PricingWeightTier = 2
	PricingWeightTier_QUARTERGRAM PricingWeightTier = 3
	PricingWeightTier_DUB         PricingWeightTier = 4
	PricingWeightTier_EIGHTH      PricingWeightTier = 5
	PricingWeightTier_QUARTER     PricingWeightTier = 6
	PricingWeightTier_HALF        PricingWeightTier = 7
	PricingWeightTier_OUNCE       PricingWeightTier = 8
	PricingWeightTier_POUND       PricingWeightTier = 9
)

var PricingWeightTier_name = map[int32]string{
	0: "OTHER",
	1: "GRAM",
	2: "HALFGRAM",
	3: "QUARTERGRAM",
	4: "DUB",
	5: "EIGHTH",
	6: "QUARTER",
	7: "HALF",
	8: "OUNCE",
	9: "POUND",
}
var PricingWeightTier_value = map[string]int32{
	"OTHER":       0,
	"GRAM":        1,
	"HALFGRAM":    2,
	"QUARTERGRAM": 3,
	"DUB":         4,
	"EIGHTH":      5,
	"QUARTER":     6,
	"HALF":        7,
	"OUNCE":       8,
	"POUND":       9,
}

func (x PricingWeightTier) String() string {
	return proto.EnumName(PricingWeightTier_name, int32(x))
}
func (PricingWeightTier) EnumDescriptor() ([]byte, []int) { return fileDescriptor20, []int{1} }

type PricingTierAvailability struct {
	Offered   bool `protobuf:"varint,1,opt,name=offered" json:"offered,omitempty"`
	Available bool `protobuf:"varint,2,opt,name=available" json:"available,omitempty"`
}

func (m *PricingTierAvailability) Reset()                    { *m = PricingTierAvailability{} }
func (m *PricingTierAvailability) String() string            { return proto.CompactTextString(m) }
func (*PricingTierAvailability) ProtoMessage()               {}
func (*PricingTierAvailability) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

func (m *PricingTierAvailability) GetOffered() bool {
	if m != nil {
		return m.Offered
	}
	return false
}

func (m *PricingTierAvailability) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

// -- Pricing: Typed Descriptors
type UnitPricingDescriptor struct {
	PriceValue float32                  `protobuf:"fixed32,1,opt,name=price_value,json=priceValue" json:"price_value,omitempty"`
	Status     *PricingTierAvailability `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Discounts  []*SaleDescriptor        `protobuf:"bytes,3,rep,name=discounts" json:"discounts,omitempty"`
}

func (m *UnitPricingDescriptor) Reset()                    { *m = UnitPricingDescriptor{} }
func (m *UnitPricingDescriptor) String() string            { return proto.CompactTextString(m) }
func (*UnitPricingDescriptor) ProtoMessage()               {}
func (*UnitPricingDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{1} }

func (m *UnitPricingDescriptor) GetPriceValue() float32 {
	if m != nil {
		return m.PriceValue
	}
	return 0
}

func (m *UnitPricingDescriptor) GetStatus() *PricingTierAvailability {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UnitPricingDescriptor) GetDiscounts() []*SaleDescriptor {
	if m != nil {
		return m.Discounts
	}
	return nil
}

type WeightedPricingDescriptor struct {
	Weight        PricingWeightTier      `protobuf:"varint,1,opt,name=weight,enum=PricingWeightTier" json:"weight,omitempty"`
	Tier          *UnitPricingDescriptor `protobuf:"bytes,2,opt,name=tier" json:"tier,omitempty"`
	WeightInGrams float32                `protobuf:"fixed32,3,opt,name=weightInGrams" json:"weightInGrams,omitempty"`
}

func (m *WeightedPricingDescriptor) Reset()                    { *m = WeightedPricingDescriptor{} }
func (m *WeightedPricingDescriptor) String() string            { return proto.CompactTextString(m) }
func (*WeightedPricingDescriptor) ProtoMessage()               {}
func (*WeightedPricingDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{2} }

func (m *WeightedPricingDescriptor) GetWeight() PricingWeightTier {
	if m != nil {
		return m.Weight
	}
	return PricingWeightTier_OTHER
}

func (m *WeightedPricingDescriptor) GetTier() *UnitPricingDescriptor {
	if m != nil {
		return m.Tier
	}
	return nil
}

func (m *WeightedPricingDescriptor) GetWeightInGrams() float32 {
	if m != nil {
		return m.WeightInGrams
	}
	return 0
}

type FreebiePricingDescriptor struct {
}

func (m *FreebiePricingDescriptor) Reset()                    { *m = FreebiePricingDescriptor{} }
func (m *FreebiePricingDescriptor) String() string            { return proto.CompactTextString(m) }
func (*FreebiePricingDescriptor) ProtoMessage()               {}
func (*FreebiePricingDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{3} }

// -- Pricing: Main Descriptor
type PricingDescriptor struct {
	Type PricingType `protobuf:"varint,1,opt,name=type,enum=PricingType" json:"type,omitempty"`
	// -- descriptors
	Unit     *UnitPricingDescriptor     `protobuf:"bytes,20,opt,name=unit" json:"unit,omitempty"`
	Weighted *WeightedPricingDescriptor `protobuf:"bytes,21,opt,name=weighted" json:"weighted,omitempty"`
	Freebie  *FreebiePricingDescriptor  `protobuf:"bytes,22,opt,name=freebie" json:"freebie,omitempty"`
}

func (m *PricingDescriptor) Reset()                    { *m = PricingDescriptor{} }
func (m *PricingDescriptor) String() string            { return proto.CompactTextString(m) }
func (*PricingDescriptor) ProtoMessage()               {}
func (*PricingDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{4} }

func (m *PricingDescriptor) GetType() PricingType {
	if m != nil {
		return m.Type
	}
	return PricingType_UNIT
}

func (m *PricingDescriptor) GetUnit() *UnitPricingDescriptor {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *PricingDescriptor) GetWeighted() *WeightedPricingDescriptor {
	if m != nil {
		return m.Weighted
	}
	return nil
}

func (m *PricingDescriptor) GetFreebie() *FreebiePricingDescriptor {
	if m != nil {
		return m.Freebie
	}
	return nil
}

// -- Pricing: Product-level Object
type ProductPricing struct {
	Discounts []*SaleDescriptor    `protobuf:"bytes,1,rep,name=discounts" json:"discounts,omitempty"`
	Manifest  []*PricingDescriptor `protobuf:"bytes,2,rep,name=manifest" json:"manifest,omitempty"`
}

func (m *ProductPricing) Reset()                    { *m = ProductPricing{} }
func (m *ProductPricing) String() string            { return proto.CompactTextString(m) }
func (*ProductPricing) ProtoMessage()               {}
func (*ProductPricing) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{5} }

func (m *ProductPricing) GetDiscounts() []*SaleDescriptor {
	if m != nil {
		return m.Discounts
	}
	return nil
}

func (m *ProductPricing) GetManifest() []*PricingDescriptor {
	if m != nil {
		return m.Manifest
	}
	return nil
}

func init() {
	proto.RegisterType((*PricingTierAvailability)(nil), "PricingTierAvailability")
	proto.RegisterType((*UnitPricingDescriptor)(nil), "UnitPricingDescriptor")
	proto.RegisterType((*WeightedPricingDescriptor)(nil), "WeightedPricingDescriptor")
	proto.RegisterType((*FreebiePricingDescriptor)(nil), "FreebiePricingDescriptor")
	proto.RegisterType((*PricingDescriptor)(nil), "PricingDescriptor")
	proto.RegisterType((*ProductPricing)(nil), "ProductPricing")
	proto.RegisterEnum("PricingType", PricingType_name, PricingType_value)
	proto.RegisterEnum("PricingWeightTier", PricingWeightTier_name, PricingWeightTier_value)
}

func init() { proto.RegisterFile("structs/pricing/PricingDescriptor.proto", fileDescriptor20) }

var fileDescriptor20 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xd1, 0x6e, 0xda, 0x30,
	0x14, 0x86, 0x1b, 0xa0, 0x10, 0x4e, 0xba, 0xd6, 0xb3, 0xd6, 0x2e, 0xad, 0x26, 0xad, 0x43, 0x95,
	0x56, 0x21, 0x2d, 0x9d, 0xa8, 0xb4, 0xcb, 0x49, 0x30, 0x52, 0x40, 0xda, 0x28, 0x75, 0xc9, 0x7a,
	0x39, 0x85, 0x60, 0x5a, 0x4b, 0x21, 0x8e, 0x1c, 0xa7, 0x1d, 0x8f, 0xb0, 0x47, 0xd8, 0x4b, 0xed,
	0x79, 0x76, 0x39, 0xd9, 0x09, 0x50, 0xca, 0xd8, 0xae, 0xc0, 0xc7, 0x9f, 0x7f, 0x7f, 0x3e, 0x8e,
	0xe1, 0x6d, 0x22, 0x45, 0x1a, 0xc8, 0xe4, 0x2c, 0x16, 0x2c, 0x60, 0xd1, 0xed, 0xd9, 0x20, 0xfb,
	0x6d, 0xd3, 0x24, 0x10, 0x2c, 0x96, 0x5c, 0x38, 0xb1, 0xe0, 0x92, 0x1f, 0x9d, 0x3c, 0x05, 0xaf,
	0xfd, 0x90, 0x3e, 0xa5, 0x6a, 0x57, 0xf0, 0x32, 0x0f, 0x18, 0x32, 0x2a, 0x9a, 0xf7, 0x3e, 0x0b,
	0xfd, 0x11, 0x0b, 0x99, 0x9c, 0x61, 0x1b, 0x2a, 0x7c, 0x32, 0xa1, 0x82, 0x8e, 0x6d, 0xe3, 0xd8,
	0x38, 0x35, 0xc9, 0x7c, 0x88, 0x5f, 0x41, 0xd5, 0xcf, 0xc8, 0x90, 0xda, 0x05, 0x3d, 0xb7, 0x2c,
	0xd4, 0x7e, 0x1a, 0xb0, 0xef, 0x45, 0x4c, 0xae, 0x89, 0xe1, 0xd7, 0x60, 0x29, 0x19, 0xfa, 0xed,
	0xde, 0x0f, 0x53, 0xaa, 0x53, 0x0b, 0x04, 0x74, 0xe9, 0xab, 0xaa, 0xe0, 0xf7, 0x50, 0x4e, 0xa4,
	0x2f, 0xd3, 0x44, 0xa7, 0x5a, 0x0d, 0xdb, 0xd9, 0x20, 0x47, 0x72, 0x0e, 0xbf, 0x83, 0xea, 0x98,
	0x25, 0x01, 0x4f, 0x23, 0x99, 0xd8, 0xc5, 0xe3, 0xe2, 0xa9, 0xd5, 0xd8, 0x73, 0x56, 0x4f, 0x4a,
	0x96, 0x84, 0x72, 0x3b, 0xbc, 0xa1, 0xec, 0xf6, 0x4e, 0xd2, 0xf1, 0xba, 0x5f, 0x1d, 0xca, 0x0f,
	0x7a, 0x52, 0xab, 0xed, 0x36, 0xf0, 0x7c, 0xfb, 0x6c, 0x89, 0x92, 0x20, 0x39, 0x81, 0xeb, 0x50,
	0x92, 0x8c, 0x8a, 0x5c, 0xf4, 0xc0, 0xf9, 0xeb, 0x89, 0x89, 0x66, 0xf0, 0x09, 0x3c, 0xcb, 0x56,
	0xf5, 0xa2, 0x8e, 0xf0, 0xa7, 0x4a, 0x54, 0x9d, 0x7c, 0xb5, 0x58, 0x3b, 0x02, 0xfb, 0x42, 0x50,
	0x3a, 0x62, 0x74, 0x2d, 0xa7, 0xf6, 0xcb, 0x80, 0xe7, 0xeb, 0xbe, 0xc7, 0x50, 0x92, 0xb3, 0x98,
	0xe6, 0xb6, 0x3b, 0x8b, 0x66, 0xcd, 0x62, 0x4a, 0xf4, 0x8c, 0xb2, 0x4c, 0x23, 0x26, 0xed, 0x17,
	0xff, 0xb6, 0x54, 0x0c, 0xfe, 0x00, 0xe6, 0x43, 0xde, 0x1a, 0x7b, 0x5f, 0xf3, 0x47, 0xce, 0xc6,
	0x5e, 0x91, 0x05, 0x8b, 0xcf, 0xa1, 0x32, 0xc9, 0xbc, 0xed, 0x03, 0xbd, 0xec, 0xd0, 0xd9, 0x74,
	0x0e, 0x32, 0x27, 0x6b, 0x1c, 0x76, 0x07, 0x82, 0x8f, 0xd3, 0x60, 0xae, 0xb3, 0x7a, 0x93, 0xc6,
	0xff, 0x6e, 0x12, 0x3b, 0x60, 0x4e, 0xfd, 0x88, 0x4d, 0x68, 0x22, 0xed, 0x82, 0xa6, 0x17, 0xb7,
	0xf5, 0xd8, 0x72, 0xce, 0xd4, 0x1b, 0x60, 0x3d, 0x6a, 0x0f, 0x36, 0xa1, 0xe4, 0xf5, 0x7b, 0x43,
	0xb4, 0x85, 0x77, 0xc0, 0xbc, 0x71, 0x7b, 0x9d, 0xee, 0xd0, 0x6d, 0x23, 0x03, 0x5b, 0x50, 0xb9,
	0x20, 0xae, 0xdb, 0xea, 0xb9, 0xa8, 0x50, 0xff, 0xb1, 0xec, 0xfa, 0xf2, 0x0b, 0xc0, 0x55, 0xd8,
	0xbe, 0x1c, 0x76, 0x5d, 0x82, 0xb6, 0x54, 0x4a, 0x87, 0x34, 0xbf, 0x20, 0x43, 0xa5, 0x74, 0x9b,
	0x9f, 0x2f, 0xf4, 0xa8, 0x80, 0xf7, 0xc0, 0xba, 0xf2, 0x9a, 0x64, 0xe8, 0x12, 0x5d, 0x28, 0xe2,
	0x0a, 0x14, 0xdb, 0x5e, 0x0b, 0x95, 0x30, 0x40, 0x59, 0x6f, 0xd6, 0x45, 0xdb, 0x6a, 0xaf, 0x9c,
	0x42, 0x65, 0x15, 0xa5, 0x02, 0x50, 0x45, 0xe7, 0x7b, 0xfd, 0x4f, 0x2e, 0x32, 0xd5, 0xdf, 0xc1,
	0xa5, 0xd7, 0x6f, 0xa3, 0x6a, 0xeb, 0x23, 0xbc, 0x61, 0xdc, 0x19, 0x85, 0x9c, 0x4f, 0x47, 0xfc,
	0xbb, 0x93, 0x04, 0x77, 0x74, 0xea, 0xab, 0x47, 0xac, 0x7a, 0xe8, 0x64, 0x6f, 0xbd, 0x85, 0x57,
	0x7b, 0x7a, 0x1d, 0xd3, 0xa0, 0x6b, 0x0c, 0x8c, 0xdf, 0x86, 0x31, 0x2a, 0xeb, 0xf7, 0x7e, 0xfe,
	0x27, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x66, 0x91, 0x75, 0x40, 0x04, 0x00, 0x00,
}
