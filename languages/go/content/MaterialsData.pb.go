// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content/MaterialsData.proto

package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MaterialsData struct {
	Ingredients []string  `protobuf:"bytes,1,rep,name=ingredients" json:"ingredients,omitempty"`
	Grow        Grow      `protobuf:"varint,2,opt,name=grow,enum=Grow" json:"grow,omitempty"`
	Species     Species   `protobuf:"varint,3,opt,name=species,enum=Species" json:"species,omitempty"`
	Genetics    *Genetics `protobuf:"bytes,4,opt,name=genetics" json:"genetics,omitempty"`
}

func (m *MaterialsData) Reset()                    { *m = MaterialsData{} }
func (m *MaterialsData) String() string            { return proto.CompactTextString(m) }
func (*MaterialsData) ProtoMessage()               {}
func (*MaterialsData) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *MaterialsData) GetIngredients() []string {
	if m != nil {
		return m.Ingredients
	}
	return nil
}

func (m *MaterialsData) GetGrow() Grow {
	if m != nil {
		return m.Grow
	}
	return Grow_GENERIC
}

func (m *MaterialsData) GetSpecies() Species {
	if m != nil {
		return m.Species
	}
	return Species_UNSPECIFIED
}

func (m *MaterialsData) GetGenetics() *Genetics {
	if m != nil {
		return m.Genetics
	}
	return nil
}

func init() {
	proto.RegisterType((*MaterialsData)(nil), "MaterialsData")
}

func init() { proto.RegisterFile("content/MaterialsData.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x19, 0x5b, 0xb5, 0x4d, 0x51, 0x24, 0xa0, 0xc4, 0x7a, 0x09, 0x05, 0x61, 0x4f, 0x29,
	0x54, 0x7c, 0x81, 0x2a, 0xe8, 0x45, 0x90, 0xf8, 0x04, 0xd9, 0x38, 0xac, 0x81, 0x36, 0x53, 0x92,
	0x91, 0xfa, 0x26, 0xbe, 0xaa, 0x47, 0x71, 0x37, 0xbb, 0xd8, 0xeb, 0xf7, 0x0f, 0xf3, 0x7f, 0x33,
	0xe2, 0xc6, 0x53, 0x64, 0x8c, 0xbc, 0x7c, 0x71, 0x8c, 0x29, 0xb8, 0x4d, 0x7e, 0x74, 0xec, 0xcc,
	0x2e, 0x11, 0xd3, 0x5c, 0x66, 0x4e, 0x9f, 0x9e, 0xf3, 0xf2, 0x29, 0xd1, 0xbe, 0xb0, 0xcb, 0x9e,
	0xbd, 0xed, 0xd0, 0x07, 0xcc, 0x05, 0x5f, 0x0d, 0xa3, 0x18, 0x91, 0x83, 0x2f, 0x7c, 0xf1, 0x0d,
	0xe2, 0xec, 0x60, 0xb5, 0xd4, 0x62, 0x16, 0x62, 0x93, 0xf0, 0x3d, 0x60, 0xe4, 0xac, 0x40, 0x8f,
	0xaa, 0xa9, 0xfd, 0x8f, 0xe4, 0xb5, 0x18, 0x37, 0x89, 0xf6, 0xea, 0x48, 0x43, 0x75, 0xbe, 0x3a,
	0x36, 0x7f, 0xed, 0xb6, 0x45, 0x72, 0x21, 0x4e, 0x73, 0xd7, 0xab, 0x46, 0x6d, 0x3a, 0x31, 0xc5,
	0xc3, 0xf6, 0x81, 0xbc, 0x15, 0x93, 0xa6, 0x48, 0xa8, 0xb1, 0x86, 0x6a, 0xb6, 0x9a, 0x9a, 0xde,
	0xca, 0x0e, 0xd1, 0xfa, 0x5e, 0xcc, 0x03, 0x99, 0x7a, 0x43, 0xb4, 0xad, 0xe9, 0xcb, 0x64, 0xff,
	0x81, 0x5b, 0x67, 0xca, 0x3b, 0xd6, 0x17, 0x83, 0xf4, 0x43, 0x47, 0x9e, 0xe1, 0x15, 0x7e, 0x00,
	0xea, 0x93, 0xf6, 0xae, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xa2, 0x7d, 0x39, 0x39,
	0x01, 0x00, 0x00,
}
