// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/FlagsDescriptor.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ProductFlagValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ProductFlag

typedef GPB_ENUM(ProductFlag) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProductFlag_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ProductFlag_Visible = 0,
  ProductFlag_Premium = 1,
  ProductFlag_Featured = 2,
  ProductFlag_Lastchance = 3,
  ProductFlag_Inhouse = 4,
};

GPBEnumDescriptor *ProductFlag_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProductFlag_IsValidValue(int32_t value);

#pragma mark - FlagsDescriptorRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface FlagsDescriptorRoot : GPBRootObject
@end

#pragma mark - ProductFlagValue

typedef GPB_ENUM(ProductFlagValue_FieldNumber) {
  ProductFlagValue_FieldNumber_Type = 1,
  ProductFlagValue_FieldNumber_Value = 2,
};

@interface ProductFlagValue : GPBMessage

@property(nonatomic, readwrite) ProductFlag type;

@property(nonatomic, readwrite) BOOL value;

@end

/**
 * Fetches the raw value of a @c ProductFlagValue's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ProductFlagValue_Type_RawValue(ProductFlagValue *message);
/**
 * Sets the raw value of an @c ProductFlagValue's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProductFlagValue_Type_RawValue(ProductFlagValue *message, int32_t value);

#pragma mark - ProductFlagset

typedef GPB_ENUM(ProductFlagset_FieldNumber) {
  ProductFlagset_FieldNumber_FlagsArray = 1,
};

@interface ProductFlagset : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProductFlagValue*> *flagsArray;
/** The number of items in @c flagsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger flagsArray_Count;

@end

#pragma mark - FlagsDescriptor

typedef GPB_ENUM(FlagsDescriptor_FieldNumber) {
  FlagsDescriptor_FieldNumber_Visible = 1,
  FlagsDescriptor_FieldNumber_Premium = 2,
  FlagsDescriptor_FieldNumber_Featured = 3,
  FlagsDescriptor_FieldNumber_Lastchance = 4,
  FlagsDescriptor_FieldNumber_Inhouse = 5,
};

@interface FlagsDescriptor : GPBMessage

@property(nonatomic, readwrite) BOOL visible;

@property(nonatomic, readwrite) BOOL premium;

@property(nonatomic, readwrite) BOOL featured;

@property(nonatomic, readwrite) BOOL lastchance;

@property(nonatomic, readwrite) BOOL inhouse;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
