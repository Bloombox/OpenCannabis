// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: products/Flower.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class FlagsDescriptor;
@class MaterialsData;
@class ProductContent;
@class ProductKey;
@class ProductPricing;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - FlowerRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface FlowerRoot : GPBRootObject
@end

#pragma mark - Flower

typedef GPB_ENUM(Flower_FieldNumber) {
  Flower_FieldNumber_Key = 1,
  Flower_FieldNumber_ProductData = 20,
  Flower_FieldNumber_MaterialData = 21,
  Flower_FieldNumber_Flags = 22,
  Flower_FieldNumber_Pricing = 23,
};

@interface Flower : GPBMessage

/** -- Object Key */
@property(nonatomic, readwrite, strong, null_resettable) ProductKey *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

/** -- Basic Product & Materials Data */
@property(nonatomic, readwrite, strong, null_resettable) ProductContent *productData;
/** Test to see if @c productData has been set. */
@property(nonatomic, readwrite) BOOL hasProductData;

@property(nonatomic, readwrite, strong, null_resettable) MaterialsData *materialData;
/** Test to see if @c materialData has been set. */
@property(nonatomic, readwrite) BOOL hasMaterialData;

/** -- Flags and Pricing */
@property(nonatomic, readwrite, strong, null_resettable) FlagsDescriptor *flags;
/** Test to see if @c flags has been set. */
@property(nonatomic, readwrite) BOOL hasFlags;

@property(nonatomic, readwrite, strong, null_resettable) ProductPricing *pricing;
/** Test to see if @c pricing has been set. */
@property(nonatomic, readwrite) BOOL hasPricing;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
