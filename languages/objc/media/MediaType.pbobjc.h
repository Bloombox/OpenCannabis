// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: media/MediaType.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DocumentType;
@class ImageType;
@class VideoType;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum MediaType_Kind

typedef GPB_ENUM(MediaType_Kind) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MediaType_Kind_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MediaType_Kind_Link = 0,
  MediaType_Kind_Image = 1,
  MediaType_Kind_Document = 2,
  MediaType_Kind_Video = 3,
};

GPBEnumDescriptor *MediaType_Kind_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MediaType_Kind_IsValidValue(int32_t value);

#pragma mark - Enum ImageType_ImageKind

typedef GPB_ENUM(ImageType_ImageKind) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ImageType_ImageKind_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ImageType_ImageKind_Png = 0,
  ImageType_ImageKind_Jpg = 1,
  ImageType_ImageKind_Gif = 2,
  ImageType_ImageKind_Svg = 3,
  ImageType_ImageKind_Webp = 4,
};

GPBEnumDescriptor *ImageType_ImageKind_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ImageType_ImageKind_IsValidValue(int32_t value);

#pragma mark - Enum DocumentType_DocumentKind

typedef GPB_ENUM(DocumentType_DocumentKind) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DocumentType_DocumentKind_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DocumentType_DocumentKind_Txt = 0,
  DocumentType_DocumentKind_Html = 1,
  DocumentType_DocumentKind_Pdf = 2,
  DocumentType_DocumentKind_Markdown = 3,
};

GPBEnumDescriptor *DocumentType_DocumentKind_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DocumentType_DocumentKind_IsValidValue(int32_t value);

#pragma mark - Enum VideoType_VideoKind

typedef GPB_ENUM(VideoType_VideoKind) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  VideoType_VideoKind_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  VideoType_VideoKind_Mp4 = 0,
  VideoType_VideoKind_Flv = 1,
  VideoType_VideoKind_Hls = 2,
};

GPBEnumDescriptor *VideoType_VideoKind_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL VideoType_VideoKind_IsValidValue(int32_t value);

#pragma mark - MediaTypeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MediaTypeRoot : GPBRootObject
@end

#pragma mark - MediaType

typedef GPB_ENUM(MediaType_FieldNumber) {
  MediaType_FieldNumber_Kind = 1,
  MediaType_FieldNumber_ImageType = 101,
  MediaType_FieldNumber_DocumentType = 201,
  MediaType_FieldNumber_VideoType = 301,
};

/**
 * -- Media Type: Top-level -- //
 **/
@interface MediaType : GPBMessage

@property(nonatomic, readwrite) MediaType_Kind kind;

@property(nonatomic, readwrite, strong, null_resettable) ImageType *imageType;
/** Test to see if @c imageType has been set. */
@property(nonatomic, readwrite) BOOL hasImageType;

@property(nonatomic, readwrite, strong, null_resettable) DocumentType *documentType;
/** Test to see if @c documentType has been set. */
@property(nonatomic, readwrite) BOOL hasDocumentType;

@property(nonatomic, readwrite, strong, null_resettable) VideoType *videoType;
/** Test to see if @c videoType has been set. */
@property(nonatomic, readwrite) BOOL hasVideoType;

@end

/**
 * Fetches the raw value of a @c MediaType's @c kind property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MediaType_Kind_RawValue(MediaType *message);
/**
 * Sets the raw value of an @c MediaType's @c kind property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMediaType_Kind_RawValue(MediaType *message, int32_t value);

#pragma mark - ImageType

typedef GPB_ENUM(ImageType_FieldNumber) {
  ImageType_FieldNumber_Kind = 1,
};

/**
 * -- Media Type: Images -- //
 **/
@interface ImageType : GPBMessage

@property(nonatomic, readwrite) ImageType_ImageKind kind;

@end

/**
 * Fetches the raw value of a @c ImageType's @c kind property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ImageType_Kind_RawValue(ImageType *message);
/**
 * Sets the raw value of an @c ImageType's @c kind property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetImageType_Kind_RawValue(ImageType *message, int32_t value);

#pragma mark - DocumentType

typedef GPB_ENUM(DocumentType_FieldNumber) {
  DocumentType_FieldNumber_Kind = 1,
  DocumentType_FieldNumber_Compressed = 2,
};

/**
 * -- Media Type: Document -- //
 **/
@interface DocumentType : GPBMessage

@property(nonatomic, readwrite) DocumentType_DocumentKind kind;

@property(nonatomic, readwrite) BOOL compressed;

@end

/**
 * Fetches the raw value of a @c DocumentType's @c kind property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t DocumentType_Kind_RawValue(DocumentType *message);
/**
 * Sets the raw value of an @c DocumentType's @c kind property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetDocumentType_Kind_RawValue(DocumentType *message, int32_t value);

#pragma mark - VideoType

typedef GPB_ENUM(VideoType_FieldNumber) {
  VideoType_FieldNumber_Kind = 1,
};

/**
 * -- Media Type: Video -- //
 **/
@interface VideoType : GPBMessage

@property(nonatomic, readwrite) VideoType_VideoKind kind;

@end

/**
 * Fetches the raw value of a @c VideoType's @c kind property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t VideoType_Kind_RawValue(VideoType *message);
/**
 * Sets the raw value of an @c VideoType's @c kind property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetVideoType_Kind_RawValue(VideoType *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
