// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.struct.nano;

@SuppressWarnings("hiding")
public final class SaleDescriptor extends
    com.google.protobuf.nano.MessageNano {

  private static volatile SaleDescriptor[] _emptyArray;
  public static SaleDescriptor[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new SaleDescriptor[0];
        }
      }
    }
    return _emptyArray;
  }

  // .SaleType type = 1;
  public int type;

  // uint64 effective = 2;
  public long effective;

  // uint64 expiration = 3;
  public long expiration;

  // uint32 percentage_amount = 20;
  public int percentageAmount;

  // uint32 bogo_trigger = 21;
  public int bogoTrigger;

  // uint32 bogo_reward = 22;
  public int bogoReward;

  // uint32 loyalty_trigger = 23;
  public int loyaltyTrigger;

  // uint32 loyalty_reward = 24;
  public int loyaltyReward;

  public SaleDescriptor() {
    clear();
  }

  public SaleDescriptor clear() {
    type = io.bloombox.schema.product.struct.nano.ProductDiscount.PERCENTAGE;
    effective = 0L;
    expiration = 0L;
    percentageAmount = 0;
    bogoTrigger = 0;
    bogoReward = 0;
    loyaltyTrigger = 0;
    loyaltyReward = 0;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.type != io.bloombox.schema.product.struct.nano.ProductDiscount.PERCENTAGE) {
      output.writeInt32(1, this.type);
    }
    if (this.effective != 0L) {
      output.writeUInt64(2, this.effective);
    }
    if (this.expiration != 0L) {
      output.writeUInt64(3, this.expiration);
    }
    if (this.percentageAmount != 0) {
      output.writeUInt32(20, this.percentageAmount);
    }
    if (this.bogoTrigger != 0) {
      output.writeUInt32(21, this.bogoTrigger);
    }
    if (this.bogoReward != 0) {
      output.writeUInt32(22, this.bogoReward);
    }
    if (this.loyaltyTrigger != 0) {
      output.writeUInt32(23, this.loyaltyTrigger);
    }
    if (this.loyaltyReward != 0) {
      output.writeUInt32(24, this.loyaltyReward);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.type != io.bloombox.schema.product.struct.nano.ProductDiscount.PERCENTAGE) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
    }
    if (this.effective != 0L) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt64Size(2, this.effective);
    }
    if (this.expiration != 0L) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt64Size(3, this.expiration);
    }
    if (this.percentageAmount != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(20, this.percentageAmount);
    }
    if (this.bogoTrigger != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(21, this.bogoTrigger);
    }
    if (this.bogoReward != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(22, this.bogoReward);
    }
    if (this.loyaltyTrigger != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(23, this.loyaltyTrigger);
    }
    if (this.loyaltyReward != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(24, this.loyaltyReward);
    }
    return size;
  }

  @Override
  public SaleDescriptor mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          int value = input.readInt32();
          switch (value) {
            case io.bloombox.schema.product.struct.nano.ProductDiscount.PERCENTAGE:
            case io.bloombox.schema.product.struct.nano.ProductDiscount.BOGO:
            case io.bloombox.schema.product.struct.nano.ProductDiscount.LOYALTY:
              this.type = value;
              break;
          }
          break;
        }
        case 16: {
          this.effective = input.readUInt64();
          break;
        }
        case 24: {
          this.expiration = input.readUInt64();
          break;
        }
        case 160: {
          this.percentageAmount = input.readUInt32();
          break;
        }
        case 168: {
          this.bogoTrigger = input.readUInt32();
          break;
        }
        case 176: {
          this.bogoReward = input.readUInt32();
          break;
        }
        case 184: {
          this.loyaltyTrigger = input.readUInt32();
          break;
        }
        case 192: {
          this.loyaltyReward = input.readUInt32();
          break;
        }
      }
    }
  }

  public static SaleDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new SaleDescriptor(), data);
  }

  public static SaleDescriptor parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new SaleDescriptor().mergeFrom(input);
  }
}
