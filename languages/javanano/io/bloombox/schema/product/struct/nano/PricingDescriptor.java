// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.struct.nano;

@SuppressWarnings("hiding")
public final class PricingDescriptor extends
    com.google.protobuf.nano.MessageNano {

  private static volatile PricingDescriptor[] _emptyArray;
  public static PricingDescriptor[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new PricingDescriptor[0];
        }
      }
    }
    return _emptyArray;
  }

  // .PricingType type = 1;
  public int type;

  // .UnitPricingDescriptor unit = 20;
  public io.bloombox.schema.product.struct.nano.UnitPricingDescriptor unit;

  // .WeightedPricingDescriptor weighted = 21;
  public io.bloombox.schema.product.struct.nano.WeightedPricingDescriptor weighted;

  // .FreebiePricingDescriptor freebie = 22;
  public io.bloombox.schema.product.struct.nano.FreebiePricingDescriptor freebie;

  public PricingDescriptor() {
    clear();
  }

  public PricingDescriptor clear() {
    type = io.bloombox.schema.product.struct.nano.ProductPricingSpec.UNIT;
    unit = null;
    weighted = null;
    freebie = null;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.type != io.bloombox.schema.product.struct.nano.ProductPricingSpec.UNIT) {
      output.writeInt32(1, this.type);
    }
    if (this.unit != null) {
      output.writeMessage(20, this.unit);
    }
    if (this.weighted != null) {
      output.writeMessage(21, this.weighted);
    }
    if (this.freebie != null) {
      output.writeMessage(22, this.freebie);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.type != io.bloombox.schema.product.struct.nano.ProductPricingSpec.UNIT) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
    }
    if (this.unit != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(20, this.unit);
    }
    if (this.weighted != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(21, this.weighted);
    }
    if (this.freebie != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(22, this.freebie);
    }
    return size;
  }

  @Override
  public PricingDescriptor mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          int value = input.readInt32();
          switch (value) {
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.UNIT:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.WEIGHTED:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.FREEBIE:
              this.type = value;
              break;
          }
          break;
        }
        case 162: {
          if (this.unit == null) {
            this.unit = new io.bloombox.schema.product.struct.nano.UnitPricingDescriptor();
          }
          input.readMessage(this.unit);
          break;
        }
        case 170: {
          if (this.weighted == null) {
            this.weighted = new io.bloombox.schema.product.struct.nano.WeightedPricingDescriptor();
          }
          input.readMessage(this.weighted);
          break;
        }
        case 178: {
          if (this.freebie == null) {
            this.freebie = new io.bloombox.schema.product.struct.nano.FreebiePricingDescriptor();
          }
          input.readMessage(this.freebie);
          break;
        }
      }
    }
  }

  public static PricingDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new PricingDescriptor(), data);
  }

  public static PricingDescriptor parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new PricingDescriptor().mergeFrom(input);
  }
}
