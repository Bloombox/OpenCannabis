// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.struct.nano;

@SuppressWarnings("hiding")
public final class UnitPricingDescriptor extends
    com.google.protobuf.nano.MessageNano {

  private static volatile UnitPricingDescriptor[] _emptyArray;
  public static UnitPricingDescriptor[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new UnitPricingDescriptor[0];
        }
      }
    }
    return _emptyArray;
  }

  // float price_value = 1;
  public float priceValue;

  // .PricingTierAvailability status = 2;
  public io.bloombox.schema.product.struct.nano.PricingTierAvailability status;

  // repeated .SaleDescriptor discounts = 3;
  public io.bloombox.schema.product.struct.nano.SaleDescriptor[] discounts;

  public UnitPricingDescriptor() {
    clear();
  }

  public UnitPricingDescriptor clear() {
    priceValue = 0F;
    status = null;
    discounts = io.bloombox.schema.product.struct.nano.SaleDescriptor.emptyArray();
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (java.lang.Float.floatToIntBits(this.priceValue)
        != java.lang.Float.floatToIntBits(0F)) {
      output.writeFloat(1, this.priceValue);
    }
    if (this.status != null) {
      output.writeMessage(2, this.status);
    }
    if (this.discounts != null && this.discounts.length > 0) {
      for (int i = 0; i < this.discounts.length; i++) {
        io.bloombox.schema.product.struct.nano.SaleDescriptor element = this.discounts[i];
        if (element != null) {
          output.writeMessage(3, element);
        }
      }
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (java.lang.Float.floatToIntBits(this.priceValue)
        != java.lang.Float.floatToIntBits(0F)) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(1, this.priceValue);
    }
    if (this.status != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(2, this.status);
    }
    if (this.discounts != null && this.discounts.length > 0) {
      for (int i = 0; i < this.discounts.length; i++) {
        io.bloombox.schema.product.struct.nano.SaleDescriptor element = this.discounts[i];
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, element);
        }
      }
    }
    return size;
  }

  @Override
  public UnitPricingDescriptor mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 13: {
          this.priceValue = input.readFloat();
          break;
        }
        case 18: {
          if (this.status == null) {
            this.status = new io.bloombox.schema.product.struct.nano.PricingTierAvailability();
          }
          input.readMessage(this.status);
          break;
        }
        case 26: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 26);
          int i = this.discounts == null ? 0 : this.discounts.length;
          io.bloombox.schema.product.struct.nano.SaleDescriptor[] newArray =
              new io.bloombox.schema.product.struct.nano.SaleDescriptor[i + arrayLength];
          if (i != 0) {
            java.lang.System.arraycopy(this.discounts, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new io.bloombox.schema.product.struct.nano.SaleDescriptor();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new io.bloombox.schema.product.struct.nano.SaleDescriptor();
          input.readMessage(newArray[i]);
          this.discounts = newArray;
          break;
        }
      }
    }
  }

  public static UnitPricingDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new UnitPricingDescriptor(), data);
  }

  public static UnitPricingDescriptor parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new UnitPricingDescriptor().mergeFrom(input);
  }
}
