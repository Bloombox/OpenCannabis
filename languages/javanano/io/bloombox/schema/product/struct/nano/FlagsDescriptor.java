// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.struct.nano;

@SuppressWarnings("hiding")
public final class FlagsDescriptor extends
    com.google.protobuf.nano.MessageNano {

  private static volatile FlagsDescriptor[] _emptyArray;
  public static FlagsDescriptor[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new FlagsDescriptor[0];
        }
      }
    }
    return _emptyArray;
  }

  // bool visible = 1;
  public boolean visible;

  // bool premium = 2;
  public boolean premium;

  // bool featured = 3;
  public boolean featured;

  // bool lastchance = 4;
  public boolean lastchance;

  // bool inhouse = 5;
  public boolean inhouse;

  public FlagsDescriptor() {
    clear();
  }

  public FlagsDescriptor clear() {
    visible = false;
    premium = false;
    featured = false;
    lastchance = false;
    inhouse = false;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.visible != false) {
      output.writeBool(1, this.visible);
    }
    if (this.premium != false) {
      output.writeBool(2, this.premium);
    }
    if (this.featured != false) {
      output.writeBool(3, this.featured);
    }
    if (this.lastchance != false) {
      output.writeBool(4, this.lastchance);
    }
    if (this.inhouse != false) {
      output.writeBool(5, this.inhouse);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.visible != false) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(1, this.visible);
    }
    if (this.premium != false) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(2, this.premium);
    }
    if (this.featured != false) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(3, this.featured);
    }
    if (this.lastchance != false) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(4, this.lastchance);
    }
    if (this.inhouse != false) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(5, this.inhouse);
    }
    return size;
  }

  @Override
  public FlagsDescriptor mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          this.visible = input.readBool();
          break;
        }
        case 16: {
          this.premium = input.readBool();
          break;
        }
        case 24: {
          this.featured = input.readBool();
          break;
        }
        case 32: {
          this.lastchance = input.readBool();
          break;
        }
        case 40: {
          this.inhouse = input.readBool();
          break;
        }
      }
    }
  }

  public static FlagsDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new FlagsDescriptor(), data);
  }

  public static FlagsDescriptor parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new FlagsDescriptor().mergeFrom(input);
  }
}
