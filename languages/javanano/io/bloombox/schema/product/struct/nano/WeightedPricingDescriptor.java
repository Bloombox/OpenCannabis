// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.struct.nano;

@SuppressWarnings("hiding")
public final class WeightedPricingDescriptor extends
    com.google.protobuf.nano.MessageNano {

  private static volatile WeightedPricingDescriptor[] _emptyArray;
  public static WeightedPricingDescriptor[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new WeightedPricingDescriptor[0];
        }
      }
    }
    return _emptyArray;
  }

  // .PricingWeightTier weight = 1;
  public int weight;

  // .UnitPricingDescriptor tier = 2;
  public io.bloombox.schema.product.struct.nano.UnitPricingDescriptor tier;

  // float weightInGrams = 3;
  public float weightInGrams;

  public WeightedPricingDescriptor() {
    clear();
  }

  public WeightedPricingDescriptor clear() {
    weight = io.bloombox.schema.product.struct.nano.ProductPricingSpec.OTHER;
    tier = null;
    weightInGrams = 0F;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.weight != io.bloombox.schema.product.struct.nano.ProductPricingSpec.OTHER) {
      output.writeInt32(1, this.weight);
    }
    if (this.tier != null) {
      output.writeMessage(2, this.tier);
    }
    if (java.lang.Float.floatToIntBits(this.weightInGrams)
        != java.lang.Float.floatToIntBits(0F)) {
      output.writeFloat(3, this.weightInGrams);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.weight != io.bloombox.schema.product.struct.nano.ProductPricingSpec.OTHER) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.weight);
    }
    if (this.tier != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(2, this.tier);
    }
    if (java.lang.Float.floatToIntBits(this.weightInGrams)
        != java.lang.Float.floatToIntBits(0F)) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(3, this.weightInGrams);
    }
    return size;
  }

  @Override
  public WeightedPricingDescriptor mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          int value = input.readInt32();
          switch (value) {
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.OTHER:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.GRAM:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.HALFGRAM:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.QUARTERGRAM:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.DUB:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.EIGHTH:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.QUARTER:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.HALF:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.OUNCE:
            case io.bloombox.schema.product.struct.nano.ProductPricingSpec.POUND:
              this.weight = value;
              break;
          }
          break;
        }
        case 18: {
          if (this.tier == null) {
            this.tier = new io.bloombox.schema.product.struct.nano.UnitPricingDescriptor();
          }
          input.readMessage(this.tier);
          break;
        }
        case 29: {
          this.weightInGrams = input.readFloat();
          break;
        }
      }
    }
  }

  public static WeightedPricingDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new WeightedPricingDescriptor(), data);
  }

  public static WeightedPricingDescriptor parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new WeightedPricingDescriptor().mergeFrom(input);
  }
}
