// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.product.nano;

@SuppressWarnings("hiding")
public interface FlowerProduct {

  public static final class Flower extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Flower[] _emptyArray;
    public static Flower[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Flower[0];
          }
        }
      }
      return _emptyArray;
    }

    // .ProductKey key = 1;
    public io.bloombox.schema.base.nano.ProductKey key;

    // .ProductContent product_data = 20;
    public io.bloombox.schema.content.nano.ProductContent productData;

    // .MaterialsData material_data = 21;
    public io.bloombox.schema.content.nano.MaterialsData materialData;

    // .FlagsDescriptor flags = 22;
    public io.bloombox.schema.product.struct.nano.FlagsDescriptor flags;

    // .ProductPricing pricing = 23;
    public io.bloombox.schema.product.struct.nano.ProductPricing pricing;

    public Flower() {
      clear();
    }

    public Flower clear() {
      key = null;
      productData = null;
      materialData = null;
      flags = null;
      pricing = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.key != null) {
        output.writeMessage(1, this.key);
      }
      if (this.productData != null) {
        output.writeMessage(20, this.productData);
      }
      if (this.materialData != null) {
        output.writeMessage(21, this.materialData);
      }
      if (this.flags != null) {
        output.writeMessage(22, this.flags);
      }
      if (this.pricing != null) {
        output.writeMessage(23, this.pricing);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.key != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.key);
      }
      if (this.productData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(20, this.productData);
      }
      if (this.materialData != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(21, this.materialData);
      }
      if (this.flags != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(22, this.flags);
      }
      if (this.pricing != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(23, this.pricing);
      }
      return size;
    }

    @Override
    public Flower mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.key == null) {
              this.key = new io.bloombox.schema.base.nano.ProductKey();
            }
            input.readMessage(this.key);
            break;
          }
          case 162: {
            if (this.productData == null) {
              this.productData = new io.bloombox.schema.content.nano.ProductContent();
            }
            input.readMessage(this.productData);
            break;
          }
          case 170: {
            if (this.materialData == null) {
              this.materialData = new io.bloombox.schema.content.nano.MaterialsData();
            }
            input.readMessage(this.materialData);
            break;
          }
          case 178: {
            if (this.flags == null) {
              this.flags = new io.bloombox.schema.product.struct.nano.FlagsDescriptor();
            }
            input.readMessage(this.flags);
            break;
          }
          case 186: {
            if (this.pricing == null) {
              this.pricing = new io.bloombox.schema.product.struct.nano.ProductPricing();
            }
            input.readMessage(this.pricing);
            break;
          }
        }
      }
    }

    public static Flower parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Flower(), data);
    }

    public static Flower parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Flower().mergeFrom(input);
    }
  }
}
