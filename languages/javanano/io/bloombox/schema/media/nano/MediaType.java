// Generated by the protocol buffer compiler.  DO NOT EDIT!

package io.bloombox.schema.media.nano;

@SuppressWarnings("hiding")
public final class MediaType extends
    com.google.protobuf.nano.MessageNano {

  // enum Kind
  public static final int LINK = 0;
  public static final int IMAGE = 1;
  public static final int DOCUMENT = 2;
  public static final int VIDEO = 3;

  private static volatile MediaType[] _emptyArray;
  public static MediaType[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new MediaType[0];
        }
      }
    }
    return _emptyArray;
  }

  // .MediaType.Kind kind = 1;
  public int kind;

  // .ImageType image_type = 101;
  public io.bloombox.schema.media.nano.ImageType imageType;

  // .DocumentType document_type = 201;
  public io.bloombox.schema.media.nano.DocumentType documentType;

  // .VideoType video_type = 301;
  public io.bloombox.schema.media.nano.VideoType videoType;

  public MediaType() {
    clear();
  }

  public MediaType clear() {
    kind = io.bloombox.schema.media.nano.MediaType.LINK;
    imageType = null;
    documentType = null;
    videoType = null;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.kind != io.bloombox.schema.media.nano.MediaType.LINK) {
      output.writeInt32(1, this.kind);
    }
    if (this.imageType != null) {
      output.writeMessage(101, this.imageType);
    }
    if (this.documentType != null) {
      output.writeMessage(201, this.documentType);
    }
    if (this.videoType != null) {
      output.writeMessage(301, this.videoType);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.kind != io.bloombox.schema.media.nano.MediaType.LINK) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.kind);
    }
    if (this.imageType != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(101, this.imageType);
    }
    if (this.documentType != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(201, this.documentType);
    }
    if (this.videoType != null) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeMessageSize(301, this.videoType);
    }
    return size;
  }

  @Override
  public MediaType mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          int value = input.readInt32();
          switch (value) {
            case io.bloombox.schema.media.nano.MediaType.LINK:
            case io.bloombox.schema.media.nano.MediaType.IMAGE:
            case io.bloombox.schema.media.nano.MediaType.DOCUMENT:
            case io.bloombox.schema.media.nano.MediaType.VIDEO:
              this.kind = value;
              break;
          }
          break;
        }
        case 810: {
          if (this.imageType == null) {
            this.imageType = new io.bloombox.schema.media.nano.ImageType();
          }
          input.readMessage(this.imageType);
          break;
        }
        case 1610: {
          if (this.documentType == null) {
            this.documentType = new io.bloombox.schema.media.nano.DocumentType();
          }
          input.readMessage(this.documentType);
          break;
        }
        case 2410: {
          if (this.videoType == null) {
            this.videoType = new io.bloombox.schema.media.nano.VideoType();
          }
          input.readMessage(this.videoType);
          break;
        }
      }
    }
  }

  public static MediaType parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaType(), data);
  }

  public static MediaType parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new MediaType().mergeFrom(input);
  }
}
