// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: products/Flower.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Flower: SwiftProtobuf.Message {
  public static let protoMessageName: String = "Flower"

  /// -- Object Key
  public var key: ProductKey {
    get {return _storage._key ?? ProductKey()}
    set {_uniqueStorage()._key = newValue}
  }
  /// Returns true if `key` has been explicitly set.
  public var hasKey: Bool {return _storage._key != nil}
  /// Clears the value of `key`. Subsequent reads from it will return its default value.
  public mutating func clearKey() {_storage._key = nil}

  /// -- Basic Product & Materials Data
  public var productData: ProductContent {
    get {return _storage._productData ?? ProductContent()}
    set {_uniqueStorage()._productData = newValue}
  }
  /// Returns true if `productData` has been explicitly set.
  public var hasProductData: Bool {return _storage._productData != nil}
  /// Clears the value of `productData`. Subsequent reads from it will return its default value.
  public mutating func clearProductData() {_storage._productData = nil}

  public var materialData: MaterialsData {
    get {return _storage._materialData ?? MaterialsData()}
    set {_uniqueStorage()._materialData = newValue}
  }
  /// Returns true if `materialData` has been explicitly set.
  public var hasMaterialData: Bool {return _storage._materialData != nil}
  /// Clears the value of `materialData`. Subsequent reads from it will return its default value.
  public mutating func clearMaterialData() {_storage._materialData = nil}

  /// -- Flags and Pricing
  public var flags: FlagsDescriptor {
    get {return _storage._flags ?? FlagsDescriptor()}
    set {_uniqueStorage()._flags = newValue}
  }
  /// Returns true if `flags` has been explicitly set.
  public var hasFlags: Bool {return _storage._flags != nil}
  /// Clears the value of `flags`. Subsequent reads from it will return its default value.
  public mutating func clearFlags() {_storage._flags = nil}

  public var pricing: ProductPricing {
    get {return _storage._pricing ?? ProductPricing()}
    set {_uniqueStorage()._pricing = newValue}
  }
  /// Returns true if `pricing` has been explicitly set.
  public var hasPricing: Bool {return _storage._pricing != nil}
  /// Clears the value of `pricing`. Subsequent reads from it will return its default value.
  public mutating func clearPricing() {_storage._pricing = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._key)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._productData)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._materialData)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._flags)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._pricing)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._key {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._productData {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._materialData {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._flags {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._pricing {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Flower: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "key"),
    20: .standard(proto: "product_data"),
    21: .standard(proto: "material_data"),
    22: .same(proto: "flags"),
    23: .same(proto: "pricing"),
  ]

  fileprivate class _StorageClass {
    var _key: ProductKey? = nil
    var _productData: ProductContent? = nil
    var _materialData: MaterialsData? = nil
    var _flags: FlagsDescriptor? = nil
    var _pricing: ProductPricing? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _key = source._key
      _productData = source._productData
      _materialData = source._materialData
      _flags = source._flags
      _pricing = source._pricing
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Flower) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._key != other_storage._key {return false}
        if _storage._productData != other_storage._productData {return false}
        if _storage._materialData != other_storage._materialData {return false}
        if _storage._flags != other_storage._flags {return false}
        if _storage._pricing != other_storage._pricing {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
