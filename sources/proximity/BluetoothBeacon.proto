// OpenCannabis Protocol
//
// Copyright $today.year (c) OpenCannabis Authors. All rights reserved.
// https://rfc.opencannabis.info - https://github.com/opencannabis/protocol
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// The source programming code in this file is licensed for open source use
// under the terms of the Apache License 2.0. Please see NOTICE.txt and
// LICENSE.txt at the root of this repository, or at the GitHub URL listed at
// the top of this file, for more information.

/**
 * Provides structures related to bluetooth beacon and bluetooth proximity sensing.
 */
syntax = "proto3";

package opencannabis.proximity;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.proximity";
option java_multiple_files = true;

import "geo/Location.proto";
import "geo/Distance.proto";
import "temporal/Instant.proto";


// Specifies a Blutooth beacon signal, detected or emitted by a BLE device.
message BluetoothBeacon {
  // UUID for the device, as observed or broadcasted.
  string uuid = 1;

  // 'Major' value in the BLE signal.
  uint32 major = 2;

  // 'Minor' value in the BLE signal.
  uint32 minor = 3;

  // Timestamp for when this beacon was witnessed.
  opencannabis.temporal.Instant seen = 4;

  // Location of the emitting or reporting (receiving) beacon.
  opencannabis.geo.Location location = 5;

  // Estimate as to the distance accuracy of this beacon.
  opencannabis.geo.LocationAccuracy accuracy = 6;
}
