// OpenCannabis Protocol
//
// Copyright $today.year (c) OpenCannabis Authors. All rights reserved.
// https://rfc.opencannabis.info - https://github.com/opencannabis/protocol
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// The source programming code in this file is licensed for open source use
// under the terms of the Apache License 2.0. Please see NOTICE.txt and
// LICENSE.txt at the root of this repository, or at the GitHub URL listed at
// the top of this file, for more information.

/**
 * Provides structures relating to edibles and enumerates various edible flags, and types.
 */
syntax = "proto3";

package opencannabis.products;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.product";
option java_multiple_files = false;
option java_outer_classname = "EdibleProduct";

import "base/ProductKey.proto";

import "content/MaterialsData.proto";
import "content/ProductContent.proto";


// Specifies types of edible products that are known and considered sub-categories of the full 'edibles' menu section.
enum EdibleType {
  // Unknown, unrecognized, or otherwise unspecified edible type.
  UNSPECIFIED_EDIBLE = 0;

  // Specifies chocolate products, including truffles, chocolate bars, and so on.
  CHOCOLATE = 1;

  // Specifies a baked good, such as a cookie, doughnut, brownie, pie, and so on.
  BAKED_GOOD = 2;

  // Specifies generic candy items not otherwise specified.
  CANDY = 3;

  // Beverage/drink products.
  BEVERAGE = 4;

  // Lozenge (hardened candy) products.
  LOZENGE = 5;

  // Sub-lingual, i.e. under-the-tongue, products.
  SUBLINGUAL = 6;

  // Soft candies made of congealed sugar product.
  GUMMY = 7;

  // Medicated butter pdocuts.
  BUTTER = 8;

  // Cooking oil and other edible oils.
  OILS = 9;

  // Cereals and related breakfast products.
  CEREAL = 10;
}


// Flags that may be applied specifically to an edible product.
enum EdibleFlag {
  // Special default flag indicating no flags.
  NO_EDIBLE_FLAG = 0;

  // Flag indicating this edible product is vegan.
  VEGAN = 1;

  // Flag indicating this edible product is gluten free.
  GLUTEN_FREE = 2;

  // Flag indicating this edible product is sugar free.
  SUGAR_FREE = 3;

  // Flag indicating this edible product is compliant with fair trade practices.
  FAIR_TRADE = 4;

  // Flag indicating this edible product is considered organic.
  ORGANIC = 5;

  // Flag indicating this edible product was grown or cultivated or prepared locally.
  LOCAL = 6;
}


// Specifies an ingredient included in an edible.
message EdibleIngredient {
  // Human-friendly label for the ingredient.
  string label = 1;

  // Human-friendly label describing the amount for this ingredient.
  string amount = 2;
}


// Specifies an edible product that may be consumed as a food or beverage, that contains cannabis or cannabinoids in
// some quantity.
message Edible {
  // Product key that uniquely identifies this edible item.
  opencannabis.base.ProductKey key = 1;

  // Specifies the subcategory of this edible product, if known and applicable.
  EdibleType type = 2;

  // Specifies flags attached to this edible product.
  repeated EdibleFlag flags = 3;

  // Product content related to/about this edible item.
  opencannabis.content.ProductContent product = 4;

  // Materials and handling information about this cartridge product.
  opencannabis.content.MaterialsData material = 5;

  // Specifies the ingredients for a product, when/if it is composed of ingredients (i.e. edibles).
  repeated EdibleIngredient ingredients = 6;
}
