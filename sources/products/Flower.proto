// OpenCannabis Protocol
//
// Copyright $today.year (c) OpenCannabis Authors. All rights reserved.
// https://rfc.opencannabis.info - https://github.com/opencannabis/protocol
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// The source programming code in this file is licensed for open source use
// under the terms of the Apache License 2.0. Please see NOTICE.txt and
// LICENSE.txt at the root of this repository, or at the GitHub URL listed at
// the top of this file, for more information.

/**
 * Provides structures relating to flowers and enumerates various flower flags, and types.
 */
syntax = "proto3";

package opencannabis.products;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.product";
option java_multiple_files = false;
option java_outer_classname = "FlowerProduct";

import "base/ProductKey.proto";

import "content/MaterialsData.proto";
import "content/ProductContent.proto";


// Specifies the model for a traditional 'flower'-style product, which involves the sale or consumption of the flower
// or 'bud,' of a cannabis plant.
message Flower {
  // Key that uniquely identifies this flower product.
  opencannabis.base.ProductKey key = 1;

  // Content about this product.
  opencannabis.content.ProductContent product = 2;

  // Materials and handling information about this product.
  opencannabis.content.MaterialsData material = 3;
}
