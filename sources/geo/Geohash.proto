// OpenCannabis Protocol
//
// Copyright $today.year (c) OpenCannabis Authors. All rights reserved.
// https://rfc.opencannabis.info - https://github.com/opencannabis/protocol
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// The source programming code in this file is licensed for open source use
// under the terms of the Apache License 2.0. Please see NOTICE.txt and
// LICENSE.txt at the root of this repository, or at the GitHub URL listed at
// the top of this file, for more information.

/**
 * Defines objects in the OpenCannabis Geo module, that provide support for Geo-hashes.
 */
syntax = "proto3";

package opencannabis.geo;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.geo";
option java_multiple_files = true;

import "bq_field.proto";
import "geo/Distance.proto";


// Specifies a point or area on earth, in such a manner that a hash algorithm is applied, where digits can be removed to
// "zoom-out" from the location.
message Geohash {
  // Specifies geohash components.
  repeated string component = 1 [(gen_bq_schema.description) = "Entire string, and substrings, of the geohash."];

  // Elevation of this point, if any.
  Distance elevation = 2 [(gen_bq_schema.description) = "Elevation of this point, if any."];

  // Accuracy rating attached to this point, if any.
  Distance accuracy = 3 [(gen_bq_schema.description) = "Accuracy rating attached to this point, if any."];
}
