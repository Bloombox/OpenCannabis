// OpenCannabis Protocol
//
// Copyright $today.year (c) OpenCannabis Authors. All rights reserved.
// https://rfc.opencannabis.info - https://github.com/opencannabis/protocol
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// The source programming code in this file is licensed for open source use
// under the terms of the Apache License 2.0. Please see NOTICE.txt and
// LICENSE.txt at the root of this repository, or at the GitHub URL listed at
// the top of this file, for more information.

/**
 * Describes geography-related models, specifically with regard to distances between two points.
 */
syntax = "proto3";

package opencannabis.geo;

option optimize_for = SPEED;
option objc_class_prefix = "OCS";
option java_package = "io.opencannabis.schema.geo";
option java_multiple_files = true;

import "bq_field.proto";


// Enumeration of recognized units of distance.
enum DistanceUnit {
  // Distance in meters.
  METERS = 0;

  // Distance in inches.
  INCHES = 1;

  // Distance in feet.
  FEET = 2;

  // Distance in millimeters.
  MILLIMETERS = 3;

  // Distance in centimeters.
  CENTIMETERS = 4;

  // Distance in kilometers.
  KILOMETERS = 5;

  // Distance in miles.
  MILES = 6;
}


// Represents an estimate of location accuracy.
message LocationAccuracy {
  // Specifies whether this accuracy rating is an estimate.
  bool estimate = 1 [(gen_bq_schema.description) = "Specifies whether this accuracy rating is an estimate."];

  // Distance value for the accuracy specified.
  DistanceValue value = 2 [(gen_bq_schema.description) = "Distance value for the accuracy specified."];
}


// Specifies a single distance value.
message DistanceValue {
  // Specifies the unit of measurement employed for this distance.
  DistanceUnit unit = 1 [(gen_bq_schema.description) = "Specifies the unit of measurement employed for this distance."];

  // Actual value.
  double value = 3 [(gen_bq_schema.description) = "Actual distance value."];
}


// Specifies a distance between two locations.
message Distance {
  // Specifies whether this distance is an estimate.
  bool estimate = 1 [(gen_bq_schema.description) = "Specifies whether this distance is an estimate."];

  // Specifies the accuracy estimate for the distance values, if known.
  LocationAccuracy accuracy = 2 [
    (gen_bq_schema.description) = "Specifies the accuracy estimate for the distance values, if known."
  ];

  // Specifies the unit of measurement for a location accuracy estimate.
  DistanceUnit unit = 3 [
    (gen_bq_schema.description) = "Specifies whether this distance is an estimate."
  ];
}
